import { InvalidHTTPParams, InvalidHTTPRequest, InvalidDataType, CannotFindTransaction, ContractDeploymentFailed, InvalidAbiItem, InvalidTransactionField, NotDelegatedTransaction, JSONRPCInvalidParams, SignerMethodError, InvalidSecp256k1PrivateKey, stringifyData, JSONRPCInvalidDefaultBlock, JSONRPCInternalError, JSONRPCMethodNotImplemented, JSONRPCServerError, JSONRPCMethodNotFound, VechainSDKError, PollExecution, ContractCallError } from '@vechain/sdk-errors';
import { Keccak256, Txt, MAINNET_NETWORK, TESTNET_NETWORK, SOLO_NETWORK, VET, Units, FixedPointNumber, VTHO, HexUInt, Revision, ABIContract, Clause, Transaction, Hex, ThorId, ABI, Address, dataUtils, Secp256k1, HDKey, HexInt, ABIEvent, ABIItem, ABIFunction, ZERO_ADDRESS, Quantity, ZERO_BYTES, fromTransactionType, TransactionType } from '@vechain/sdk-core';
import { EventEmitter } from 'events';
import { Interface, ErrorFragment, JsonRpcApiProvider } from 'ethers';
import { concatBytes } from '@noble/curves/abstract/utils';
import { hashTypedData } from 'viem';
import { VeChainSDKLogger } from '@vechain/sdk-logging';

var kr=Object.defineProperty;var Br=(n,e)=>{for(var t in e)kr(n,t,{get:e[t],enumerable:!0});};var Rr={};Br(Rr,{AccountDetail:()=>j,AccountsModule:()=>K,BUILT_IN_CONTRACTS:()=>fe,BlocksModule:()=>z,CHAIN_ID:()=>ke,CHAIN_TAG:()=>Be,Contract:()=>B,ContractFactory:()=>G,ContractsModule:()=>X,DebugModule:()=>Z,DefaultBlockToRevision:()=>h,DelegationHandler:()=>V,ERROR_SELECTOR:()=>he,ForkDetector:()=>H,GasModule:()=>ee,HTTPS_REGEX:()=>Ue,HTTP_REGEX:()=>ge,HardhatVeChainProvider:()=>on,HttpMethod:()=>w,JSONRPCEthersProvider:()=>tt,LogsModule:()=>te,MAINNET_URL:()=>Mr,NODE_HEALTHCHECK_TOLERANCE_IN_SECONDS:()=>Ge,NodesModule:()=>ne,PANIC_SELECTOR:()=>ye,POLLING_INTERVAL:()=>nt,Poll:()=>x,ProviderInternalBaseWallet:()=>ce,ProviderInternalHDWallet:()=>et,RPCMethodsMap:()=>nn,RPC_DOCUMENTATION_URL:()=>l,RPC_METHODS:()=>N,SimpleHttpClient:()=>E,TESTNET_URL:()=>Dr,THOR_SOLO_URL:()=>Ur,ThorClient:()=>oe,TransactionsModule:()=>re,VeChainAbstractSigner:()=>ae,VeChainPrivateKeySigner:()=>se,VeChainProvider:()=>$,blocksFormatter:()=>b,buildQuery:()=>y,chainTagToChainId:()=>ot,debugFormatter:()=>de,debugTraceBlockByHash:()=>dt,debugTraceBlockByNumber:()=>pt,debugTraceCall:()=>mt,debugTraceTransaction:()=>D,engineGetPayloadBodiesByHashV1:()=>wi,engineGetPayloadBodiesByRangeV1:()=>Ri,ethAccounts:()=>pe,ethBlockNumber:()=>ft,ethCall:()=>yt,ethChainId:()=>f,ethEstimateGas:()=>bt,ethFeeHistory:()=>Tt,ethGasPrice:()=>Pt,ethGetBalance:()=>Ct,ethGetBlockByHash:()=>P,ethGetBlockByNumber:()=>C,ethGetBlockReceipts:()=>wt,ethGetBlockTransactionCountByHash:()=>xt,ethGetBlockTransactionCountByNumber:()=>Rt,ethGetCode:()=>vt,ethGetFilterChanges:()=>Wi,ethGetFilterLogs:()=>zi,ethGetLogs:()=>me,ethGetStorageAt:()=>kt,ethGetTransactionByBlockHashAndIndex:()=>Bt,ethGetTransactionByBlockNumberAndIndex:()=>It,ethGetTransactionByHash:()=>U,ethGetTransactionCount:()=>At,ethGetTransactionReceipt:()=>M,ethGetUncleByBlockHashAndIndex:()=>St,ethGetUncleByBlockNumberAndIndex:()=>_t,ethGetUncleCountByBlockHash:()=>Et,ethGetUncleCountByBlockNumber:()=>Nt,ethMaxPriorityFeePerGas:()=>Ot,ethRequestAccounts:()=>Ft,ethSendRawTransaction:()=>Mt,ethSendTransaction:()=>Dt,ethSignTransaction:()=>Gt,ethSignTypedDataV4:()=>Vt,ethSubscribe:()=>qt,ethSyncing:()=>Jt,ethUnsubscribe:()=>$t,evmMine:()=>Fe,formatToLogsRPC:()=>st,formatToRPCStandard:()=>at,getCachedChainId:()=>lt,getCachedChainTag:()=>ti,getCriteriaSetForInput:()=>ct,getNumberOfLogsAheadOfTransactionIntoBlockExpanded:()=>it,getTransactionIndexIntoBlock:()=>S,netListening:()=>Wt,netPeerCount:()=>Kt,netVersion:()=>zt,sanitizeWebsocketBaseURL:()=>k,signerUtils:()=>De,subscriptions:()=>$r,thorest:()=>u,toQueryString:()=>v,transactionsFormatter:()=>F,txPoolContent:()=>Yt,txPoolContentFrom:()=>Qt,txPoolInspect:()=>Xt,txPoolStatus:()=>Zt,vnsUtils:()=>R,web3ClientVersion:()=>en,web3Sha3:()=>tn});var w=(t=>(t.GET="GET",t.POST="POST",t))(w||{});var E=class n{static DEFAULT_TIMEOUT=3e4;baseURL;headers;timeout;constructor(e,t=new Headers,r=n.DEFAULT_TIMEOUT){this.baseURL=e,this.timeout=r,this.headers=t;}async get(e,t){return await this.http("GET",e,t)}isValidUrl(e){try{return new URL(e),!0}catch{return !1}}async http(e,t,r){let o=new AbortController,i=setTimeout(()=>{o.abort();},this.timeout),a;try{t.startsWith("/")&&(t=t.slice(1));let c=this.baseURL;c.endsWith("/")||(c+="/"),a=new URL(t,c),r?.query!=null&&Object.entries(r.query).forEach(([d,m])=>{a.searchParams.append(d,String(m));});let p=new Headers(this.headers);r?.headers!==void 0&&r?.headers!=null&&Object.entries(r.headers).forEach(([d,m])=>{p.append(d,String(m));});}catch(c){throw new InvalidHTTPParams("HttpClient.http()",c.message,{method:e,url:this.isValidUrl(this.baseURL)?new URL(t,this.baseURL).toString():t},c)}try{let c=await fetch(a,{method:e,headers:r?.headers,body:e!=="GET"?JSON.stringify(r?.body):void 0,signal:o.signal});if(c.ok){let d=Object.fromEntries(c.headers.entries());return r?.validateResponseHeader!=null&&d!=null&&r.validateResponseHeader(d),await c.json()}let p=await c.clone().text();throw new Error(`HTTP ${c.status} ${c.statusText} ${p}`,{cause:c})}catch(c){throw new InvalidHTTPRequest("HttpClient.http()",c.message,{method:e,url:this.isValidUrl(this.baseURL)?new URL(t,this.baseURL).toString():t},c)}finally{clearTimeout(i);}}async post(e,t){return await this.http("POST",e,t)}};function an(n,e){if(n.nonce!==void 0&&(typeof n.nonce=="string"?parseInt(n.nonce,10):n.nonce)<0)throw new Error("Transaction nonce must be a positive number");return {from:e,chainTag:n.chainTag,blockRef:n.blockRef,expiration:n.expiration,clauses:n.clauses,gasPriceCoef:n.gasPriceCoef,gas:n.gas,dependsOn:n.dependsOn??void 0,nonce:n.nonce,reserved:n.reserved,maxPriorityFeePerGas:n.maxPriorityFeePerGas??void 0,maxFeePerGas:n.maxFeePerGas??void 0}}var De={transactionBodyToTransactionRequestInput:an};var N=(s=>(s.eth_blockNumber="eth_blockNumber",s.eth_chainId="eth_chainId",s.eth_getBalance="eth_getBalance",s.eth_getCode="eth_getCode",s.eth_getStorageAt="eth_getStorageAt",s.eth_estimateGas="eth_estimateGas",s.eth_call="eth_call",s.eth_sendRawTransaction="eth_sendRawTransaction",s.eth_getLogs="eth_getLogs",s.eth_getBlockByHash="eth_getBlockByHash",s.eth_getBlockByNumber="eth_getBlockByNumber",s.eth_accounts="eth_accounts",s.eth_requestAccounts="eth_requestAccounts",s.eth_gasPrice="eth_gasPrice",s.eth_getTransactionByHash="eth_getTransactionByHash",s.eth_getTransactionCount="eth_getTransactionCount",s.eth_getTransactionReceipt="eth_getTransactionReceipt",s.eth_getTransactionByBlockNumberAndIndex="eth_getTransactionByBlockNumberAndIndex",s.eth_getTransactionByBlockHashAndIndex="eth_getTransactionByBlockHashAndIndex",s.eth_getBlockTransactionCountByHash="eth_getBlockTransactionCountByHash",s.eth_getBlockTransactionCountByNumber="eth_getBlockTransactionCountByNumber",s.eth_sendTransaction="eth_sendTransaction",s.eth_syncing="eth_syncing",s.net_version="net_version",s.web3_clientVersion="web3_clientVersion",s.eth_subscribe="eth_subscribe",s.eth_unsubscribe="eth_unsubscribe",s.debug_traceTransaction="debug_traceTransaction",s.debug_traceCall="debug_traceCall",s.evm_mine="evm_mine",s.evm_increaseTime="evm_increaseTime",s.web3_sha3="web3_sha3",s.net_peerCount="net_peerCount",s.net_listening="net_listening",s.eth_getUncleByBlockNumberAndIndex="eth_getUncleByBlockNumberAndIndex",s.eth_getUncleByBlockHashAndIndex="eth_getUncleByBlockHashAndIndex",s.txpool_inspect="txpool_inspect",s.txpool_contentFrom="txpool_contentFrom",s.txpool_content="txpool_content",s.txpool_status="txpool_status",s.eth_signTransaction="eth_signTransaction",s.debug_traceBlockByHash="debug_traceBlockByHash",s.debug_traceBlockByNumber="debug_traceBlockByNumber",s.eth_getUncleCountByBlockHash="eth_getUncleCountByBlockHash",s.eth_getUncleCountByBlockNumber="eth_getUncleCountByBlockNumber",s.eth_signTypedData_v4="eth_signTypedData_v4",s.eth_getBlockReceipts="eth_getBlockReceipts",s.eth_coinbase="eth_coinbase",s.eth_feeHistory="eth_feeHistory",s.eth_getWork="eth_getWork",s.eth_mining="eth_mining",s.eth_hashrate="eth_hashrate",s.eth_protocolVersion="eth_protocolVersion",s.eth_sign="eth_sign",s.eth_submitWork="eth_submitWork",s.parity_nextNonce="parity_nextNonce",s.eth_newFilter="eth_newFilter",s.eth_newBlockFilter="eth_newBlockFilter",s.eth_newPendingTransactionFilter="eth_newPendingTransactionFilter",s.eth_getFilterLogs="eth_getFilterLogs",s.eth_getFilterChanges="eth_getFilterChanges",s.eth_uninstallFilter="eth_uninstallFilter",s.debug_getBadBlocks="debug_getBadBlocks",s.debug_getRawBlock="debug_getRawBlock",s.debug_getRawHeader="debug_getRawHeader",s.debug_getRawReceipts="debug_getRawReceipts",s.debug_getRawTransaction="debug_getRawTransaction",s.engine_exchangeCapabilities="engine_exchangeCapabilities",s.engine_exchangeTransitionConfigurationV1="engine_exchangeTransitionConfigurationV1",s.engine_forkchoiceUpdatedV1="engine_forkchoiceUpdatedV1",s.engine_forkchoiceUpdatedV2="engine_forkchoiceUpdatedV2",s.engine_forkchoiceUpdatedV3="engine_forkchoiceUpdatedV3",s.engine_getPayloadBodiesByHashV1="engine_getPayloadBodiesByHashV1",s.engine_getPayloadBodiesByRangeV1="engine_getPayloadBodiesByRangeV1",s.engine_getPayloadV1="engine_getPayloadV1",s.engine_getPayloadV2="engine_getPayloadV2",s.engine_getPayloadV3="engine_getPayloadV3",s.engine_newPayloadV1="engine_newPayloadV1",s.engine_newPayloadV2="engine_newPayloadV2",s.engine_newPayloadV3="engine_newPayloadV3",s.eth_createAccessList="eth_createAccessList",s.eth_getProof="eth_getProof",s.eth_maxPriorityFeePerGas="eth_maxPriorityFeePerGas",s))(N||{});var j=class{balance;energy;hasCode;get vet(){return VET.of(Units.formatEther(FixedPointNumber.of(this.balance)))}get vtho(){return VTHO.of(Units.formatEther(FixedPointNumber.of(this.energy)))}constructor(e){this.balance=e.balance,this.energy=e.energy,this.hasCode=e.hasCode;}};var Er="0x0000000000000000000000000000506172616d73",Nr="0x0000000000000000000000000000456e65726779",Or=[{constant:!1,inputs:[{name:"_key",type:"bytes32"},{name:"_value",type:"uint256"}],name:"set",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_key",type:"bytes32"}],name:"get",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"executor",outputs:[{name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"key",type:"bytes32"},{indexed:!1,name:"value",type:"uint256"}],name:"Set",type:"event"}],Fr=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"transfer",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_amount",type:"uint256"}],name:"move",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalBurned",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{anonymous:!1,inputs:[{indexed:!0,name:"_from",type:"address"},{indexed:!0,name:"_to",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"_owner",type:"address"},{indexed:!0,name:"_spender",type:"address"},{indexed:!1,name:"_value",type:"uint256"}],name:"Approval",type:"event"}],fe={PARAMS_ABI:Or,PARAMS_ADDRESS:Er,ENERGY_ABI:Fr,ENERGY_ADDRESS:Nr};var ge=/^http:\/\//,Ue=/^https:\/\//;var Ge=30;var he=Keccak256.of(Txt.of("Error(string)").bytes).toString().slice(0,10),ye=Keccak256.of(Txt.of("Panic(uint256)").bytes).toString().slice(0,10);var Mr="https://mainnet.vechain.org",Dr="https://testnet.vechain.org",Ur="http://localhost:8669";var l="https://ethereum.github.io/execution-apis/api-documentation/";var y=n=>{let e={};for(let t in n)n[t]!==void 0&&(e[t]=n[t]);return e};async function Lr(n){await new Promise(e=>setTimeout(e,n));}function dn(n,e){if(e?.requestIntervalInMilliseconds!==void 0&&(e.requestIntervalInMilliseconds<=0||!Number.isInteger(e.requestIntervalInMilliseconds)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.requestIntervalInMilliseconds" it must be a positive number',{requestIntervalInMilliseconds:e.requestIntervalInMilliseconds});if(e?.maximumIterations!==void 0&&(e.maximumIterations<=0||!Number.isInteger(e.maximumIterations)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumIterations" it must be a positive number',{maximumIterations:e.maximumIterations});if(e?.maximumWaitingTimeInMilliseconds!==void 0&&(e.maximumWaitingTimeInMilliseconds<=0||!Number.isInteger(e.maximumWaitingTimeInMilliseconds)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumWaitingTimeInMilliseconds" it must be a positive number',{maximumWaitingTimeInMilliseconds:e.maximumWaitingTimeInMilliseconds});let t=0,r,o=!1,i=Date.now();return {waitUntil:async a=>{try{do{r=await n(),await Lr(e?.requestIntervalInMilliseconds??1e3),t=t+1;let c=a(r),p=e?.maximumIterations!==void 0?t>=e.maximumIterations:!1,d=e?.maximumWaitingTimeInMilliseconds!==void 0&&Date.now()-i>=e.maximumWaitingTimeInMilliseconds;o=!(c||p||d);}while(o);return r}catch(c){throw new PollExecution("SyncPoll.waitUntil()","Polling failed: Function execution error encountered during synchronous polling.",{functionName:n.name},c)}}}}var Ve=class extends EventEmitter{currentIteration=0;error;hasToStopOnError;intervalId;pollingFunction;requestIntervalInMilliseconds;constructor(e,t,r){if(super(),this.pollingFunction=e,this.hasToStopOnError=r,t!==void 0&&(t<=0||!Number.isInteger(t)))throw new InvalidDataType("SyncPoll()",'Polling failed: Invalid input for field "options?.maximumWaitingTimeInMilliseconds" it must be a positive number',{requestIntervalInMilliseconds:t});this.requestIntervalInMilliseconds=t;}get getCurrentIteration(){return this.currentIteration}async _intervalLoop(){try{let e=await this.pollingFunction();this.emit("data",{data:e,eventPoll:this});}catch(e){this.error=new PollExecution("EventPoll - main interval loop function",`Error during the execution of the poll ${e.message}`,{functionName:this.pollingFunction.name}),this.emit("error",{error:this.error}),this.hasToStopOnError&&this.stopListen();}this.currentIteration=this.currentIteration+1;}onData(e){return this.on("data",t=>{e(t.data,t.eventPoll);}),this}onError(e){return this.on("error",t=>{e(t.error);}),this}onStart(e){return this.on("start",t=>{e(t.eventPoll);}),this}onStop(e){return this.on("stop",t=>{e(t.eventPoll);}),this}startListen(){this.emit("start",{eventPoll:this}),this._intervalLoop().then(()=>{this.intervalId=setInterval(()=>{(async()=>await this._intervalLoop())();},this.requestIntervalInMilliseconds);});}stopListen(){clearInterval(this.intervalId),this.emit("stop",{eventPoll:this});}};function pn(n,e,t=!0){return new Ve(n,e,t)}var x={SyncPoll:dn,createEventPoll:pn};var v=n=>{let e=Object.entries(n).filter(([,t])=>t!==void 0).map(([t,r])=>`${encodeURIComponent(t)}=${encodeURIComponent(r)}`);return e.length>0?`?${e.join("&")}`:""},k=n=>{n=n.trim();let e=/^(https?:\/\/)([a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)(:\d+)?\/?$/;if(!e.test(n))throw new InvalidDataType("sanitizeWebsocketBaseURL()",`Invalid url: ${n}. Must adhere to the regex: ${e}.`,{url:n,urlRegex:e});return n=n.replace(/\/$/,""),n=ge.exec(n)!==null?n.replace(ge,"ws://"):n.replace(Ue,"wss://"),n};var u={accounts:{get:{ACCOUNT_DETAIL:n=>`/accounts/${n}`,ACCOUNT_BYTECODE:n=>`/accounts/${n}/code`,STORAGE_AT:(n,e)=>`/accounts/${n}/storage/${e}`},post:{SIMULATE_TRANSACTION:n=>n!=null?`/accounts/*?revision=${n}`:"/accounts/*"}},blocks:{get:{BLOCK_DETAIL:n=>`/blocks/${n}`}},nodes:{get:{NODES:()=>"/node/network/peers"}},logs:{post:{EVENT_LOGS:()=>"/logs/event",TRANSFER_LOGS:()=>"/logs/transfer"}},transactions:{get:{TRANSACTION:n=>`/transactions/${n}`,TRANSACTION_RECEIPT:n=>`/transactions/${n}/receipt`},post:{TRANSACTION:()=>"/transactions"}},subscriptions:{get:{BLOCK:(n,e)=>{let t=v({pos:e});return `${k(n)}/subscriptions/block${t}`},EVENT:(n,e)=>{let t=v({pos:e?.position,addr:e?.contractAddress,t0:e?.topic0,t1:e?.topic1,t2:e?.topic2,t3:e?.topic3,t4:e?.topic4});return `${k(n)}/subscriptions/event${t}`},VET_TRANSFER:(n,e)=>{let t=v({pos:e?.position,txOrigin:e?.signerAddress,sender:e?.sender,recipient:e?.receiver});return `${k(n)}/subscriptions/transfer${t}`},BEAT_LEGACY:(n,e)=>{let t=v({pos:e});return `${k(n)}/subscriptions/beat${t}`},BEAT:(n,e)=>{let t=v({pos:e});return `${k(n)}/subscriptions/beat2${t}`},NEW_TRANSACTIONS:n=>`${k(n)}/subscriptions/txpool`}},debug:{post:{TRACE_TRANSACTION_CLAUSE:()=>"/debug/tracers",TRACE_CONTRACT_CALL:()=>"/debug/tracers/call",RETRIEVE_STORAGE_RANGE:()=>"/debug/storage-range"}},fees:{get:{FEES_HISTORY:(n,e,t)=>`/fees/history${v({blockCount:n,newestBlock:e,rewardPercentiles:t?.join(",")})}`}}};var mn=(n,e)=>u.subscriptions.get.BEAT_LEGACY(n,e?.blockID),fn=(n,e)=>u.subscriptions.get.BEAT(n,e?.blockID);var gn=(n,e)=>u.subscriptions.get.BLOCK(n,e?.blockID);var yn=(n,e,t,r)=>{let i=(typeof e=="string"?new ABIEvent(e):new ABIEvent(e)).encodeFilterTopicsNoNull(t??[]);return u.subscriptions.get.EVENT(n,{position:r?.blockID,contractAddress:r?.address,topic0:i[0],topic1:i[1],topic2:i[2],topic3:i[3],topic4:i[4]})};var bn=n=>u.subscriptions.get.NEW_TRANSACTIONS(n);var Tn=(n,e)=>u.subscriptions.get.VET_TRANSFER(n,{position:e?.blockID,signerAddress:e?.signerAddress,sender:e?.sender,receiver:e?.recipient});var $r={getEventSubscriptionUrl:yn,getBlockSubscriptionUrl:gn,getNewTransactionsSubscriptionUrl:bn,getVETtransfersSubscriptionUrl:Tn,getLegacyBeatSubscriptionUrl:mn,getBeatSubscriptionUrl:fn};var W={[MAINNET_NETWORK.genesisBlock.id]:{registry:"0xa9231da8BF8D10e2df3f6E03Dd5449caD600129b",resolveUtils:"0xA11413086e163e41901bb81fdc5617c975Fa5a1A"},[TESTNET_NETWORK.genesisBlock.id]:{registry:"0xcBFB30c1F267914816668d53AcBA7bA7c9806D13",resolveUtils:"0xc403b8EA53F707d7d4de095f0A20bC491Cf2bc94"},[SOLO_NETWORK.genesisBlock.id]:{registry:"0x1c4a602ed21f3d1dddd1142c81f231ef1a08c921",resolveUtils:"0xb2f08bbfa8a42b1fbe63feec604cb147385203d7"}};var Yr=async(n,e)=>{let[t]=await R.resolveNames(n.blocks,n.transactions,[e]);return t??null},Qr=async(n,e,t)=>{let r=await n.getGenesisBlock();if(r===null||!Address.isValid(W[r.id]?.resolveUtils))return t.map(()=>null);let o=W[r.id].resolveUtils,i=await e.executeCall(o,ABIItem.ofSignature(ABIFunction,"function getAddresses(string[] names) returns (address[] addresses)"),[t]),[a]=i.result.array;return a.map(c=>c===ZERO_ADDRESS||!Address.isValid(c)?null:c)},Xr=async(n,e)=>{let[t]=await R.lookupAddresses(n,[e]);return t??null},Zr=async(n,e)=>{let t=await n.blocks.getGenesisBlock();if(t===null||!Address.isValid(W[t.id]?.resolveUtils))return e.map(()=>null);let r=W[t.id].resolveUtils,o=await n.contracts.executeCall(r,ABIItem.ofSignature(ABIFunction,"function getNames(address[] addresses) returns (string[] names)"),[e]),[i]=o.result.array;return i.map(a=>a===""?null:a)},R={resolveName:Yr,resolveNames:Qr,lookupAddress:Xr,lookupAddresses:Zr};var K=class{constructor(e){this.httpClient=e;}async getAccount(e,t){let r=t?.revision?.toString();return new j(await this.httpClient.get(u.accounts.get.ACCOUNT_DETAIL(e.toString()),{query:y({revision:r})}))}async getBytecode(e,t){let r=t?.revision?.toString(),o=await this.httpClient.get(u.accounts.get.ACCOUNT_BYTECODE(e.toString()),{query:y({revision:r})});return HexUInt.of(o.code)}async getStorageAt(e,t,r){let o=t.toString(),i=r?.revision?.toString(),a=await this.httpClient.get(u.accounts.get.STORAGE_AT(e.toString(),o),{query:y({pos:o,revision:i})});return HexUInt.of(a.value)}};var z=class{constructor(e,t){this.httpClient=e;this.onBlockError=t?.onBlockError,t?.isPollingEnabled===!0&&this.setupPolling();}headBlock=null;onBlockError;pollInstance;destroy(){this.pollInstance!=null&&this.pollInstance.stopListen();}setupPolling(){this.pollInstance=x.createEventPoll(async()=>await this.getBestBlockCompressed(),1e4).onData(e=>{this.headBlock=e;}).onError(this.onBlockError??(()=>{})),this.pollInstance.startListen();}async getBlockCompressed(e){if(e!=null&&!Revision.isValid(e))throw new InvalidDataType("BlocksModule.getBlockCompressed()",'Invalid revision. The revision must be a string representing a block number or block id (also "best" is accepted which represents the best block & "finalized" for the finalized block).',{revision:e});return await this.httpClient.http("GET",u.blocks.get.BLOCK_DETAIL(e))}async getBlockExpanded(e){if(e!=null&&!Revision.isValid(e))throw new InvalidDataType("BlocksModule.getBlockExpanded()",'Invalid revision. The revision must be a string representing a block number or block id (also "best" is accepted which represents the best block & "finalized" for the finalized block).',{revision:e});return await this.httpClient.http("GET",u.blocks.get.BLOCK_DETAIL(e),{query:y({expanded:!0})})}async getBestBlockCompressed(){return await this.getBlockCompressed("best")}async getBestBlockExpanded(){return await this.getBlockExpanded("best")}async getBestBlockBaseFeePerGas(){let e=await this.getBestBlockCompressed();return e===null?null:e.baseFeePerGas??null}async getBestBlockRef(){let e=await this.getBestBlockCompressed();return e===null?null:e.id.slice(0,18)}async getFinalBlockCompressed(){return await this.getBlockCompressed("finalized")}async getFinalBlockExpanded(){return await this.getBlockExpanded("finalized")}async _waitForBlock(e,t,r){if(e!=null&&e<=0)throw new InvalidDataType("BlocksModule.waitForBlock()","Invalid blockNumber. The blockNumber must be a number representing a block number.",{blockNumber:e});return await x.SyncPoll(async()=>t?await this.getBestBlockCompressed():await this.getBestBlockExpanded(),{requestIntervalInMilliseconds:r?.intervalMs,maximumWaitingTimeInMilliseconds:r?.timeoutMs}).waitUntil(o=>o!=null&&o?.number>=e)}async waitForBlockCompressed(e,t){return await this._waitForBlock(e,!1,t)}async waitForBlockExpanded(e,t){return await this._waitForBlock(e,!0,t)}getHeadBlock(){return this.headBlock}async getGenesisBlock(){return await this.getBlockCompressed(0)}getAllAddressesIntoABlock(e){let t=new Set;return t.add(e.beneficiary),t.add(e.signer),e.transactions.forEach(r=>{r.clauses.forEach(o=>{typeof o.to=="string"&&t.add(o.to);}),t.add(r.gasPayer),t.add(r.origin),r.outputs.forEach(o=>{typeof o.contractAddress=="string"&&t.add(o.contractAddress),o.events.forEach(i=>{t.add(i.address);}),o.transfers.forEach(i=>{t.add(i.recipient),t.add(i.sender);});});}),Array.from(t)}};var be=class{contract;criteriaSet;constructor(e,t){this.contract=e,this.criteriaSet=t;}async get(e){let t={range:e?.range??{unit:"block",from:0,to:(await this.contract.contractsModule.transactionsModule.blocksModule.getBestBlockCompressed())?.number},criteriaSet:this.criteriaSet,options:e?.options,order:e?.order??"asc"};return await this.contract.contractsModule.transactionsModule.logsModule.filterEventLogs(t)}};function Y(n){return new Proxy(n.read,{get:(e,t)=>async(...r)=>{let o=Je(r),i=o.clauseAdditionalOptions?.comment,a=o.clauseAdditionalOptions?.revision,c=n.getFunctionAbi(t),p=await n.contractsModule.executeCall(n.address,c,o.args,{caller:n.getSigner()!==void 0?await n.getSigner()?.getAddress():void 0,...n.getContractReadOptions(),comment:i,revision:a,includeABI:!0});if(!p.success)throw new ContractCallError(c.stringSignature,p.result.errorMessage,{contractAddress:n.address});return p.result.array}})}function Q(n){return new Proxy(n.transact,{get:(e,t)=>async(...r)=>{if(n.getSigner()===void 0)throw new InvalidTransactionField("getTransactProxy()","Caller signer is required to transact with the contract.",{fieldName:"signer",prop:t});let o=n.getContractTransactOptions(),i=Je(r),a=i.clauseAdditionalOptions?.value,c=i.clauseAdditionalOptions?.comment;return r=i.args,await n.contractsModule.executeTransaction(n.getSigner(),n.address,n.getFunctionAbi(t),r,{...o,value:o.value??a??"0x0",comment:c,includeABI:!0})}})}function Rn(n){return new Proxy(n.filters,{get:(e,t)=>r=>{let o=Bn(n,t,r);return new be(n,[o])}})}function vn(n){return new Proxy(n.clause,{get:(e,t)=>(...r)=>{let o=n.getContractTransactOptions(),i=Je(r),a=i.clauseAdditionalOptions?.value,c=i.clauseAdditionalOptions?.comment;return r=i.args,{clause:Clause.callFunction(Address.of(n.address),n.getFunctionAbi(t),r,VET.of(o.value??a??0,Units.wei),{comment:c,includeABI:!0}),functionAbi:n.getFunctionAbi(t)}}})}function kn(n){return new Proxy(n.criteria,{get:(e,t)=>r=>Bn(n,t,r)})}function Bn(n,e,t){let r=n.getEventAbi(e),o=new Map(r.encodeFilterTopicsNoNull(t).map((i,a)=>[a,i]));return {criteria:{address:n.address,topic0:o.get(0),topic1:o.has(1)?o.get(1):void 0,topic2:o.has(2)?o.get(2):void 0,topic3:o.has(3)?o.get(3):void 0,topic4:o.has(4)?o.get(4):void 0},eventAbi:r}}function Je(n){let e=ao(n),t=so(n),r=co(n);return (e!==void 0||t!==void 0||r!==void 0)&&(n=n.filter(o=>!(In(o)||An(o)||Sn(o)))),{args:n,clauseAdditionalOptions:{value:e?.value,comment:t?.comment,revision:r?.revision}}}function ao(n){return n.find(e=>In(e))}function so(n){return n.find(e=>An(e))}function co(n){return n.find(e=>Sn(e))}function In(n){return n.value!==void 0}function An(n){return n.comment!==void 0}function Sn(n){return n.revision!==void 0}var B=class{contractsModule;address;abi;signer;deployTransactionReceipt;read={};transact={};filters={};clause={};criteria={};contractCallOptions={};contractTransactionOptions={};constructor(e,t,r,o,i){this.abi=t,this.address=e,this.contractsModule=r,this.deployTransactionReceipt=i,this.signer=o,this.read=Y(this),this.transact=Q(this),this.filters=Rn(this),this.clause=vn(this),this.criteria=kn(this);}setContractReadOptions(e){return this.contractCallOptions=e,this.read=Y(this),this.contractCallOptions}getContractReadOptions(){return this.contractCallOptions}clearContractReadOptions(){this.contractCallOptions={},this.read=Y(this);}setContractTransactOptions(e){return this.contractTransactionOptions=e,this.transact=Q(this),this.contractTransactionOptions}getContractTransactOptions(){return this.contractTransactionOptions}clearContractTransactOptions(){this.contractTransactionOptions={},this.transact=Q(this);}setSigner(e){return this.signer=e,this.transact=Q(this),this.read=Y(this),this.signer}getSigner(){return this.signer}getFunctionAbi(e){return ABIContract.ofAbi(this.abi).getFunction(e.toString())}getEventAbi(e){return ABIContract.ofAbi(this.abi).getEvent(e.toString())}};var G=class{abi;bytecode;signer;deployTransaction;contractsModule;constructor(e,t,r,o){this.abi=e,this.bytecode=t,this.signer=r,this.contractsModule=o;}async startDeployment(e,t){let r=Clause.deployContract(HexUInt.of(this.bytecode),e),o=await this.contractsModule.transactionsModule.estimateGas([r],await this.signer.getAddress()),i=await this.contractsModule.transactionsModule.buildTransactionBody([r],o.totalGas,t),a=await this.signer.signTransaction(De.transactionBodyToTransactionRequestInput(i,await this.signer.getAddress()));return this.deployTransaction=await this.contractsModule.transactionsModule.sendTransaction(Transaction.decode(HexUInt.of(a.slice(2)).bytes,!0)),this}async waitForDeployment(){if(this.deployTransaction?.id===void 0)throw new CannotFindTransaction("ContractFactory.waitForDeployment()","Cannot find a contract deployment transaction",{networkUrl:this.contractsModule.transactionsModule.blocksModule.httpClient.baseURL});let e=await this.deployTransaction.wait();if(e?.outputs[0]?.contractAddress===null||e?.outputs[0]?.contractAddress===void 0)throw new ContractDeploymentFailed("ContractFactory.waitForDeployment()","Contract deployment failed.",{deployTransaction:this.deployTransaction});return new B(e?.outputs[0].contractAddress,this.abi,this.contractsModule,this.signer,e)}getDeployTransaction(){return this.deployTransaction}};var X=class{constructor(e){this.transactionsModule=e;}createContractFactory(e,t,r){return new G(e,t,r,this)}load(e,t,r){return new B(e,t,this,r)}async executeCall(e,t,r,o){return await this.transactionsModule.executeCall(e,t,r,o)}async executeMultipleClausesCall(e,t){return await this.transactionsModule.executeMultipleClausesCall(e,t)}async executeTransaction(e,t,r,o,i){return await this.transactionsModule.executeTransaction(e,t,r,o,i)}async executeMultipleClausesTransaction(e,t,r){return await this.transactionsModule.executeMultipleClausesTransaction(e,t,r)}async getLegacyBaseGasPrice(){return await this.transactionsModule.getLegacyBaseGasPrice()}};var Z=class{constructor(e){this.httpClient=e;}async retrieveStorageRange(e){this.validateTarget(e.target,"retrieveStorageRange");let t=`${e.target.blockId}/${e.target.transaction}/${e.target.clauseIndex}`;return await this.httpClient.post(u.debug.post.RETRIEVE_STORAGE_RANGE(),{query:{},body:{target:t,address:e.options?.address?.toString(),keyStart:e.options?.keyStart?.toString(),maxResult:e.options?.maxResult},headers:{}})}async traceContractCall(e,t){return await this.httpClient.post(u.debug.post.TRACE_CONTRACT_CALL(),{query:{},body:{to:e.target?.to?.toString(),data:e.target?.data?.toString(),value:typeof e.target?.value?.wei=="bigint"?HexUInt.of(e.target.value.wei).toString():void 0,name:t,gas:e.options?.gas,gasPrice:e.options?.gasPrice,caller:e.options?.caller,provedWork:e.options?.provedWork,gasPayer:e.options?.gasPayer,expiration:e.options?.expiration,blockRef:e.options?.blockRef,config:e.config},headers:{}})}async traceTransactionClause(e,t){this.validateTarget(e.target,"traceTransactionClause");let r=`${e.target.blockId}/${e.target.transaction}/${e.target.clauseIndex}`;return await this.httpClient.post(u.debug.post.TRACE_TRANSACTION_CLAUSE(),{query:{},body:{target:r,name:t,config:e.config},headers:{}})}validateTarget(e,t){if(typeof e.transaction=="number"&&e.transaction<0)throw new InvalidDataType("DebugModule.validateTarget()",`invalid transaction index '${e.transaction}' given as input for ${t}.`,{transaction:e.transaction,functionName:t});if(e.clauseIndex<0)throw new InvalidDataType("DebugModule.validateTarget()",`invalid clause index '${e.clauseIndex}' given as input for ${t}.`,{clauseIndex:e.clauseIndex,functionName:t})}};var ee=class{httpClient;transactionsModule;constructor(e){this.httpClient=e,this.transactionsModule=null;}setTransactionsModule(e){this.transactionsModule=e;}async estimateGas(e,t,r){if(this.transactionsModule==null)throw new InvalidDataType("estimateGas()","Transactions module not set",{});return await this.transactionsModule.estimateGas(e,t,r)}async getMaxPriorityFeePerGas(){let e=await this.httpClient.get("/fees/priority");if(e==null||typeof e!="object")throw new InvalidDataType("getMaxPriorityFeePerGas()","Invalid response format from /fees/priority endpoint",{response:e});if(e.maxPriorityFeePerGas===void 0||e.maxPriorityFeePerGas===null||e.maxPriorityFeePerGas===""||typeof e.maxPriorityFeePerGas!="string")throw new InvalidDataType("getMaxPriorityFeePerGas()","Missing or invalid maxPriorityFeePerGas in response",{response:e});return e.maxPriorityFeePerGas}async getFeeHistory(e){if(e==null||typeof e.blockCount!="number"||!Number.isFinite(e.blockCount)||e.blockCount<=0)throw new InvalidDataType("getFeeHistory()","Invalid blockCount parameter",{options:e});if(e.newestBlock!==null&&e.newestBlock!==void 0&&!Revision.isValid(e.newestBlock))throw new InvalidDataType("getFeeHistory()",'Invalid revision. The revision must be a string representing a block number or block id (also "best" is accepted which represents the best block & "finalized" for the finalized block).',{options:e});let t=await this.httpClient.http("GET",u.fees.get.FEES_HISTORY(e.blockCount,e.newestBlock,e.rewardPercentiles));if(t==null||typeof t!="object")throw new InvalidDataType("getFeeHistory()","Invalid response format from /fees/history endpoint",{response:t});return t}};var te=class{blocksModule;constructor(e){this.blocksModule=e;}async filterRawEventLogs(e){return await this.blocksModule.httpClient.http("POST",u.logs.post.EVENT_LOGS(),{query:{},body:e,headers:{}})}async filterEventLogs(e){let t=e.criteriaSet?.map(i=>i.eventAbi),r=await this.getRawEventLogs(e),o=[];if(t!==void 0){let i=this.removeDuplicatedAbis(t);r.forEach(a=>{let c=i.get(a.topics[0]);if(c==null)throw new InvalidAbiItem("LogsModule.filterEventLogs","Topic not found in the provided ABIs.",{type:"event",value:a.topics[0]});a.decodedData=c.decodeEventLogAsArray({data:Hex.of(a.data),topics:a.topics.map(p=>Hex.of(p))}),o.push(a);});}return o}async filterGroupedEventLogs(e){let t=e.criteriaSet?.map(i=>i.eventAbi),r=await this.getRawEventLogs(e),o=new Map;if(t!==void 0){let i=this.removeDuplicatedAbis(t);i.forEach(a=>o.set(a.signatureHash,[])),r.forEach(a=>{let c=i.get(a.topics[0]);if(c==null)throw new InvalidAbiItem("LogsModule.filterGroupedEventLogs","Topic not found in the provided ABIs.",{type:"event",value:a.topics[0]});a.decodedData=c.decodeEventLogAsArray({data:Hex.of(a.data),topics:a.topics.map(p=>Hex.of(p))}),o.get(a.topics[0])?.push(a);});}return Array.from(o.values())}async getRawEventLogs(e){let t=e.criteriaSet?.map(o=>o.criteria),r={range:e.range??{unit:"block",from:0,to:(await this.blocksModule.getBestBlockCompressed())?.number},criteriaSet:t,options:e.options,order:e.order??"asc"};return await this.filterRawEventLogs(r)}removeDuplicatedAbis(e){let t=new Map;return e.forEach(r=>{t.has(r.signatureHash)||t.set(r.signatureHash,r);}),t}async filterTransferLogs(e){return await this.blocksModule.httpClient.http("POST",u.logs.post.TRANSFER_LOGS(),{query:{},body:e,headers:{}})}};var ne=class{blocksModule;constructor(e){this.blocksModule=e;}async getNodes(){return await this.blocksModule.httpClient.http("GET",u.nodes.get.NODES())??[]}async isHealthy(){let e=await this.blocksModule.getBestBlockCompressed(),t=this.getTimestampFromBlock(e),r=Math.floor(Date.now()/1e3)-t;return Math.abs(r)<30}getTimestampFromBlock=e=>{if(e==null||typeof e!="object"||!("timestamp"in e)||typeof e.timestamp!="number")throw new InvalidDataType("NodesModule.getTimestampFromBlock()","Sending failed: Input must be a valid raw transaction in hex format.",{response:e});return e?.timestamp}};var $e=Keccak256.of(Txt.of("Error(string)").bytes).toString().slice(0,10),je=Keccak256.of(Txt.of("Panic(uint256)").bytes).toString().slice(0,10);function We(n){if(n.startsWith($e))return ABI.ofEncoded("string","0x"+n.slice($e.length)).getFirstDecodedValue();if(n.startsWith(je)){let e=ABI.ofEncoded("uint256","0x"+n.slice(je.length)).getFirstDecodedValue();return `Panic(0x${parseInt(e).toString(16).padStart(2,"0")})`}}var re=class{blocksModule;debugModule;logsModule;gasModule;forkDetector;constructor(e,t,r,o,i){this.blocksModule=e,this.debugModule=t,this.logsModule=r,this.gasModule=o,this.forkDetector=i;}async getTransaction(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.blocksModule.httpClient.http("GET",u.transactions.get.TRANSACTION(e),{query:y({raw:!1,head:t?.head,pending:t?.pending})})}async getTransactionRaw(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransactionRaw()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.blocksModule.httpClient.http("GET",u.transactions.get.TRANSACTION(e),{query:y({raw:!0,head:t?.head,pending:t?.pending})})}async getTransactionReceipt(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.getTransactionReceipt()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{id:e});if(t?.head!==void 0&&!ThorId.isValid(t.head))throw new InvalidDataType("TransactionsModule.getTransaction()","Invalid head given as input. Input must be an hex string of length 64.",{head:t?.head});return await this.blocksModule.httpClient.http("GET",u.transactions.get.TRANSACTION_RECEIPT(e),{query:y({head:t?.head})})}async sendRawTransaction(e){if(!Hex.isValid0x(e))throw new InvalidDataType("TransactionsModule.sendRawTransaction()","Sending failed: Input must be a valid raw transaction in hex format.",{raw:e});try{Transaction.decode(HexUInt.of(e.slice(2)).bytes,!0);}catch(r){throw new InvalidDataType("TransactionsModule.sendRawTransaction()","Sending failed: Input must be a valid raw transaction in hex format. Decoding error encountered.",{raw:e},r)}let t=await this.blocksModule.httpClient.http("POST",u.transactions.post.TRANSACTION(),{body:{raw:e}});return {id:t.id,wait:async()=>await this.waitForTransaction(t.id)}}async sendTransaction(e){if(!e.isSigned)throw new InvalidDataType("TransactionsModule.sendTransaction()","Invalid transaction given as input. Transaction must be signed.",{signedTx:e});let t=Hex.of(e.encoded).toString();return await this.sendRawTransaction(t)}async waitForTransaction(e,t){if(!ThorId.isValid(e))throw new InvalidDataType("TransactionsModule.waitForTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{txID:e});return await x.SyncPoll(async()=>await this.getTransactionReceipt(e),{requestIntervalInMilliseconds:t?.intervalMs,maximumWaitingTimeInMilliseconds:t?.timeoutMs}).waitUntil(r=>r!==null)}async buildTransactionBody(e,t,r){let o=await this.blocksModule.getBlockCompressed(0);if(o===null)throw new InvalidTransactionField("TransactionsModule.buildTransactionBody()","Error while building transaction body: Cannot get genesis block.",{fieldName:"genesisBlock",genesisBlock:o,clauses:e,options:r});let i=r?.blockRef??await this.blocksModule.getBestBlockRef();if(i===null)throw new InvalidTransactionField("TransactionsModule.buildTransactionBody()","Error while building transaction body: Cannot get blockRef.",{fieldName:"blockRef",blockRef:i,clauses:e,options:r});let a=r?.chainTag??+`0x${o.id.slice(64)}`,c=await this.fillDefaultBodyOptions(r);return {blockRef:i,chainTag:a,clauses:await this.resolveNamesInClauses(e),dependsOn:r?.dependsOn??null,expiration:r?.expiration??32,gas:t,gasPriceCoef:c?.gasPriceCoef,maxFeePerGas:c?.maxFeePerGas,maxPriorityFeePerGas:c?.maxPriorityFeePerGas,nonce:r?.nonce??Hex.random(8).toString(),reserved:r?.isDelegated===!0?{features:1}:void 0}}async fillTransactionBody(e){let t={maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,gasPriceCoef:e.gasPriceCoef},r=await this.fillDefaultBodyOptions(t);return {...e,...r}}async fillDefaultBodyOptions(e){if(e??={},e.gasPriceCoef!==void 0)return e.maxFeePerGas=void 0,e.maxPriorityFeePerGas=void 0,e;if(e.gasPriceCoef!==void 0&&(e.maxFeePerGas!==void 0||e.maxPriorityFeePerGas!==void 0))throw new InvalidDataType("TransactionsModule.fillDefaultBodyOptions()","Invalid transaction body options. Cannot specify both legacy and dynamic fee type options.",{options:e});let t=await this.forkDetector.isGalacticaForked("best");if(!t&&(e.maxFeePerGas!==void 0||e.maxPriorityFeePerGas!==void 0))throw new InvalidDataType("TransactionsModule.fillDefaultBodyOptions()","Invalid transaction body options. Dynamic fee tx is not allowed before Galactica fork.",{options:e});if(!t&&(e.gasPriceCoef===void 0||e.gasPriceCoef===null))return e.gasPriceCoef=0,e;if(t&&e.maxFeePerGas!==void 0&&e.maxPriorityFeePerGas!==void 0)return e;e.gasPriceCoef=void 0;let r=await this.blocksModule.getBestBlockBaseFeePerGas();if(r==null)throw new InvalidDataType("TransactionsModule.fillDefaultBodyOptions()","Invalid transaction body options. Unable to get best block base fee per gas.",{options:e});let o=HexUInt.of(r).bi;if(e.maxPriorityFeePerGas===void 0||e.maxPriorityFeePerGas===null){let i=await this.calculateDefaultMaxPriorityFeePerGas(o);e.maxPriorityFeePerGas=i;}if(e.maxFeePerGas===void 0||e.maxFeePerGas===null){let i=HexUInt.of(e.maxPriorityFeePerGas).bi,a=o+i;e.maxFeePerGas=HexUInt.of(a).toString();}return e}async calculateDefaultMaxPriorityFeePerGas(e){let t=await this.gasModule.getFeeHistory({blockCount:10,newestBlock:"best",rewardPercentiles:[25,50,75]}),r;if(t.reward!==null&&t.reward!==void 0&&t.reward.length>0){let a=t.reward[t.reward.length-1];if(new Set(a).size===3)r=HexUInt.of(a[2]).bi;else {let p=0n,d=0;for(let m of t.reward)m.length!==null&&m.length>2&&m[2]!==null&&m[2]!==void 0&&(p+=HexUInt.of(m[2]).bi,d++);r=d>0?p/BigInt(d):0n;}}else r=HexUInt.of(await this.gasModule.getMaxPriorityFeePerGas()).bi;let o=e*46n/1000n,i=o<r?o:r;return HexUInt.of(i).toString()}async resolveNamesInClauses(e){let t=e.reduce((i,a)=>(typeof a.to=="string"&&!i.has(a.to)&&a.to.includes(".")&&i.set(a.to,a.to),i),new Map),r=[...t.keys()];return t.size===0?e:((await R.resolveNames(this.blocksModule,this,r)).forEach((i,a)=>{i!==null&&t.set(r[a],i);}),e.map(i=>typeof i.to!="string"?i:{to:t.get(i.to)??i.to,data:i.data,value:i.value}))}async simulateTransaction(e,t){let{revision:r,caller:o,gasPrice:i,gasPayer:a,gas:c,blockRef:p,expiration:d,provedWork:m}=t??{};if(r!=null&&!Revision.isValid(r))throw new InvalidDataType("TransactionsModule.simulateTransaction()","Invalid revision given as input. Input must be a valid revision (i.e., a block number or block ID).",{revision:r});return await this.blocksModule.httpClient.http("POST",u.accounts.post.SIMULATE_TRANSACTION(r),{query:y({revision:r}),body:{clauses:await this.resolveNamesInClauses(e.map(_=>({to:_.to,data:_.data,value:BigInt(_.value).toString()}))),gas:c,gasPrice:i,caller:o,provedWork:m,gasPayer:a,expiration:d,blockRef:p}})}decodeRevertReason(e,t){if(e.startsWith(he))return ABI.ofEncoded("string",`0x${e.slice(he.length)}`).getFirstDecodedValue();if(e.startsWith(ye)){let r=ABI.ofEncoded("uint256",`0x${e.slice(ye.length)}`).getFirstDecodedValue();return `Panic(0x${parseInt(r).toString(16).padStart(2,"0")})`}else if(t!==void 0)return new Interface([ErrorFragment.from(t)]).decodeErrorResult(ErrorFragment.from(t),e).toArray()[0];return ""}async getRevertReason(e,t){let r=this.blocksModule,o=this.debugModule,i=await this.getTransaction(e),a=i!==null?await r.getBlockExpanded(i.meta.blockID):null;if(a===null||i===null)return null;let c=S(b.formatToRPCStandard(a,""),e);for(let p=0;p<i.clauses.length;p++){let d=await o.traceTransactionClause({target:{blockId:ThorId.of(a.id),transaction:c,clauseIndex:p},config:{OnlyTopCall:!0}},"call");if(d.output!==void 0)return this.decodeRevertReason(d.output,t)}return null}async estimateGas(e,t,r){if(e.length<=0)throw new InvalidDataType("GasModule.estimateGas()","Invalid clauses. Clauses must be an array of clauses with at least one clause.",{clauses:e,caller:t,options:r});if(r?.gasPadding!==void 0&&(r.gasPadding<=0||r.gasPadding>1))throw new InvalidDataType("GasModule.estimateGas()","Invalid gasPadding. gasPadding must be a number between (0, 1].",{gasPadding:r?.gasPadding});let o=await this.simulateTransaction(e,{caller:t,...r}),i=o.some(d=>d.reverted),a=Number(Transaction.intrinsicGas(e).wei),c=o.reduce((d,m)=>d+m.gasUsed,0),p=Math.ceil((a+(c!==0?c+15e3:0))*(1+(r?.gasPadding??0)));return i?{totalGas:p,reverted:!0,revertReasons:o.map(d=>We(d.data)??""),vmErrors:o.map(d=>d.vmError)}:{totalGas:p,reverted:!1,revertReasons:[],vmErrors:[]}}async executeCall(e,t,r,o){let i=await this.simulateTransaction([{to:e,value:"0",data:t.encodeData(r).toString()}],o);return this.getContractCallResult(i[0].data,t,i[0].reverted)}async executeMultipleClausesCall(e,t){return (await this.simulateTransaction(e.map(o=>o.clause),t)).map((o,i)=>this.getContractCallResult(o.data,e[i].functionAbi,o.reverted))}async executeTransaction(e,t,r,o,i){let a=await e.sendTransaction({clauses:[Clause.callFunction(Address.of(t),r,o,VET.of(i?.value??0,Units.wei))],gas:i?.gas,gasLimit:i?.gasLimit,gasPrice:i?.gasPrice,gasPriceCoef:i?.gasPriceCoef,maxFeePerGas:i?.maxFeePerGas,maxPriorityFeePerGas:i?.maxPriorityFeePerGas,nonce:i?.nonce,value:i?.value,dependsOn:i?.dependsOn,expiration:i?.expiration,chainTag:i?.chainTag,blockRef:i?.blockRef,delegationUrl:i?.delegationUrl,comment:i?.comment});return {id:a,wait:async()=>await this.waitForTransaction(a)}}async executeMultipleClausesTransaction(e,t,r){let o=await t.sendTransaction({clauses:e.map(i=>i.clause),gas:r?.gas,gasLimit:r?.gasLimit,gasPrice:r?.gasPrice,gasPriceCoef:r?.gasPriceCoef,maxFeePerGas:r?.maxFeePerGas,maxPriorityFeePerGas:r?.maxPriorityFeePerGas,nonce:r?.nonce,value:r?.value,dependsOn:r?.dependsOn,expiration:r?.expiration,chainTag:r?.chainTag,blockRef:r?.blockRef,delegationUrl:r?.delegationUrl,comment:r?.comment});return {id:o,wait:async()=>await this.waitForTransaction(o)}}async getLegacyBaseGasPrice(){return await this.executeCall(fe.PARAMS_ADDRESS,ABIContract.ofAbi(fe.PARAMS_ABI).getFunction("get"),[dataUtils.encodeBytes32String("base-gas-price","left")])}getContractCallResult(e,t,r){if(r)return {success:!1,result:{errorMessage:We(e)??""}};let o=Hex.of(e),i=t.decodeResult(o),a=t.decodeOutputAsArray(o);return {success:!0,result:{plain:i,array:a}}}};var Bo=async(n,e,t,r)=>{let o=Hex.of(n.encoded).toString(),i={origin:t,raw:o};try{let a=await r.http("POST",e,{body:i,headers:{"Content-Type":"application/json"}});return HexUInt.of(a.signature.slice(2)).bytes}catch(a){throw new NotDelegatedTransaction("_getDelegationSignature()","Delegation failed: Cannot get signature from gasPayerUrl.",{gasPayerUrl:e},a)}},V=n=>{let e=n==null,t=!e&&n?.gasPayerServiceUrl!==void 0,r=!e&&n?.gasPayerPrivateKey!==void 0;return {isDelegated:()=>t||r,gasPayerOrUndefined:()=>e?void 0:n,gasPayerOrNull:()=>e?null:n,getDelegationSignatureUsingUrl:async(o,i,a)=>{if(!t)throw new NotDelegatedTransaction("DelegationHandler.getDelegationSignatureUsingUrl()","Delegation with url failed: gasPayerServiceUrl is not defined.",void 0);return await Bo(o,n?.gasPayerServiceUrl,i,a)}}};var Ce=new Map,So=5*60*1e3,we=!1,H=class{constructor(e){this.httpClient=e;}async isGalacticaForked(e){if(we)return !0;if(e===void 0&&(e="best"),!Revision.isValid(e))throw new InvalidDataType("GalacticaForkDetector.isGalacticaForked()","Invalid revision. Must be a valid block number or ID.",{revision:e});let t=String(e),r=Ce.get(t),o=Date.now();if(r!==void 0){if(r.result)return we=!0,!0;if(o-r.timestamp<So)return !1}let i=await this.httpClient.http("GET",u.blocks.get.BLOCK_DETAIL(e),{query:y({expanded:!0})});if(i===null)return Ce.set(t,{result:!1,timestamp:o}),!1;let a=i.baseFeePerGas!==void 0;return Ce.set(t,{result:a,timestamp:o}),a&&(we=!0),a}async detectGalactica(e="best"){return await this.isGalacticaForked(e)}clearCache(){Ce.clear(),we=!1;}};var oe=class n{constructor(e,t){this.httpClient=e;this.accounts=new K(e),this.debug=new Z(e),this.blocks=new z(e,t),this.logs=new te(this.blocks),this.nodes=new ne(this.blocks),this.gas=new ee(this.httpClient),this.forkDetector=new H(this.httpClient),this.transactions=new re(this.blocks,this.debug,this.logs,this.gas,this.forkDetector),this.gas.setTransactionsModule(this.transactions),this.contracts=new X(this.transactions);}accounts;nodes;blocks;logs;transactions;contracts;forkDetector;gas;debug;static at(e,t){return new n(new E(e),t)}destroy(){this.blocks.destroy();}static fromUrl(e,t){return n.at(e,t)}};var ae=class{MESSAGE_PREFIX=Txt.of(`Ethereum Signed Message:
`).bytes;provider;constructor(e){this.provider=e;}async populateCall(e){if(e.from===void 0||e.from===null)e.from=Address.checksum(HexUInt.of(await this.getAddress()));else if(Address.checksum(HexUInt.of(e.from))!==Address.checksum(HexUInt.of(await this.getAddress())))throw new InvalidDataType("VeChainAbstractSigner.populateCall()","From address does not match the signer address.",{signerAddress:Address.checksum(HexUInt.of(await this.getAddress())),fromAddress:Address.checksum(HexUInt.of(e.from))});return e.to===void 0&&(e.to=null),e.clauses!==void 0&&e.clauses.length>0&&(e.to=e.clauses[0].to,e.value=e.clauses[0].value,e.data=e.clauses[0].data),e}async populateTransaction(e){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.populateTransaction()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let t=this.provider.thorClient,r=await this.populateCall(e),o=e.gas!==void 0?Number(e.gas):await this.estimateGas(e);return await t.transactions.buildTransactionBody(r.clauses??this._buildClauses(r),o,{isDelegated:this.provider?.enableDelegation,nonce:r.nonce??await this.getNonce("pending"),blockRef:r.blockRef??void 0,chainTag:r.chainTag??void 0,dependsOn:r.dependsOn??void 0,expiration:r.expiration,gasPriceCoef:r.gasPriceCoef??void 0,maxPriorityFeePerGas:r.maxPriorityFeePerGas??void 0,maxFeePerGas:r.maxFeePerGas??void 0})}async estimateGas(e){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.estimateGas()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let t=this.provider.thorClient,r=await this.populateCall(e);return (await t.transactions.estimateGas(r.clauses??this._buildClauses(r),r.from)).totalGas}async call(e,t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VechainAbstractSigner.call()","Thor client not found into the signer. Please attach a Provider with a thor client to your signer instance.",{provider:this.provider});let r=this.provider.thorClient,o=await this.populateCall(e);return (await r.transactions.simulateTransaction(o.clauses??this._buildClauses(o),{revision:t??void 0,gas:o.gas??void 0,gasPrice:o.gasPrice??void 0,caller:o.from,provedWork:o.provedWork??void 0,gasPayer:o.gasPayer??void 0,expiration:o.expiration??void 0,blockRef:o.blockRef??void 0}))[0].data}async getNonce(e){return this.provider!==void 0?await this.provider.request({method:"eth_getTransactionCount",params:[await this.getAddress(),e]}):Hex.random(6).toString()}async signMessage(e){try{let t=typeof e=="string"?Txt.of(e).bytes:e,r=Keccak256.of(concatBytes(this.MESSAGE_PREFIX,Txt.of(t.length).bytes,t)).bytes;return await this.signPayload(r)}catch(t){throw new SignerMethodError("VeChainAbstractSigner.signMessage","The message could not be signed.",{message:e},t)}}deducePrimaryType(e){let t=new Map;Object.keys(e).forEach(o=>{t.set(o,[]);});for(let o in e)for(let i of e[o]){let a=i.type.split("[")[0];t.has(a)&&t.get(a)?.push(o);}let r=Array.from(t.keys()).filter(o=>t.get(o)?.length===0);if(r.length!==1)throw new SignerMethodError("VeChainAbstractSigner.deducePrimaryType","Ambiguous primary types or unused types.",{primaryTypes:r.join(", ")});return r[0]}async signTypedData(e,t,r,o){try{let i=Hex.of(hashTypedData({domain:e,types:t,primaryType:o??this.deducePrimaryType(t),message:r})).bytes;return await this.signPayload(i)}catch(i){throw new SignerMethodError("VeChainAbstractSigner.signTypedData","The typed data could not be signed.",{domain:e,types:t,message:r,primaryType:o},i)}}async resolveName(e){return this.provider===void 0?null:await R.resolveName(this.provider.thorClient,e)}_buildClauses(e){return e.to!==void 0&&e.to!==null?[{to:e.to,data:e.data??"0x",value:e.value??"0x0"}]:[Clause.deployContract(HexUInt.of(e.data??0),void 0,{value:e.value===void 0?e.value:HexUInt.of(e.value).toString(!0),comment:e.comment})]}};var se=class n extends ae{constructor(t,r){if(!Secp256k1.isValidPrivateKey(t))throw new InvalidSecp256k1PrivateKey("VeChainPrivateKeySigner.constructor()","Invalid private key used to sign initialize the signer. Ensure it's a valid Secp256k1 private key.",void 0);super(r);this.privateKey=t;}connect(t){return new n(this.privateKey,t)}async getAddress(){return Address.checksum(HexUInt.of(await Promise.resolve(Address.ofPrivateKey(this.privateKey).toString())))}async signTransaction(t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VeChainPrivateKeySigner.signTransaction()","Thor provider is not found into the signer. Please attach a Provider to your signer instance.",{transactionToSign:t});let r=V(await this.provider.wallet?.getGasPayer()).gasPayerOrNull();return t.delegationUrl!==void 0&&(r={gasPayerServiceUrl:t.delegationUrl}),await this._signFlow(t,r,this.provider.thorClient)}async sendTransaction(t){if(this.provider===void 0)throw new JSONRPCInvalidParams("VeChainPrivateKeySigner.sendTransaction()","Thor provider is not found into the signer. Please attach a Provider to your signer instance.",{transactionToSend:t});let r=this.provider,o=await this.signTransaction(t);return await r.request({method:"eth_sendRawTransaction",params:[o]})}async signPayload(t){let r=Secp256k1.sign(t,new Uint8Array(this.privateKey));return r[r.length-1]+=27,await Promise.resolve(Hex.of(r).toString())}async _signFlow(t,r,o){let i=await this.populateTransaction(t);return r!==null?await this._signWithGasPayer(i,this.privateKey,o,r):Hex.of(Transaction.of(i).sign(this.privateKey).encoded).toString()}async _signWithGasPayer(t,r,o,i){let a=Address.ofPrivateKey(r).toString(),c=Transaction.of(t);if(i?.gasPayerPrivateKey!==void 0)return Hex.of(Transaction.of(t).signAsSenderAndGasPayer(r,HexUInt.of(i?.gasPayerPrivateKey).bytes).encoded).toString();let p=await V(i).getDelegationSignatureUsingUrl(c,a,o.httpClient),d=Secp256k1.sign(c.getTransactionHash().bytes,r),m=new Uint8Array(d.length+p.length);return m.set(d),m.set(p,d.length),Hex.of(Transaction.of(c.body,m).encoded).toString()}};var ve=class{accounts;gasPayer;constructor(e,t){this.accounts=e,this.gasPayer=t?.gasPayer;}getSignerSync(e,t){let r=this.getAccountSync(t);return r?.privateKey!==void 0?new se(r.privateKey,e):null}getAddressesSync(){return this.accounts.map(e=>e.address)}getAccountSync(e){if(e===void 0||typeof e=="number")return this.accounts[e??0]??null;if(!Address.isValid(e))throw new InvalidDataType("AbstractProviderInternalWallet.getAccountSync()","Invalid params expected an address.",{addressOrIndex:e});return this.accounts.find(r=>Address.checksum(HexUInt.of(r.address))===Address.checksum(HexUInt.of(e)))??null}getGasPayerSync(){return V(this.gasPayer).gasPayerOrNull()}};var ce=class extends ve{async getSigner(e,t){return await Promise.resolve(this.getSignerSync(e,t))}async getAddresses(){return await Promise.resolve(this.getAddressesSync())}async getAccount(e){return await Promise.resolve(this.getAccountSync(e))}async getGasPayer(){return await Promise.resolve(this.getGasPayerSync())}};var et=class extends ce{mnemonic;derivationPath;count;initialIndex;constructor(e,t=1,r=0,o=HDKey.VET_DERIVATION_PATH,i){super([...Array(t).keys()].map(a=>{let c=HDKey.fromMnemonic(e,o).deriveChild(a+r).privateKey;return {privateKey:c,publicKey:Secp256k1.derivePublicKey(c),address:Address.ofPrivateKey(c).toString()}}),i),this.mnemonic=e,this.derivationPath=o,this.count=t,this.initialIndex=r;}};var tt=class extends JsonRpcApiProvider{hardhatProvider;constructor(e,t,r){super({name:t,chainId:e}),this.hardhatProvider=r;}async send(e,t){return this._start(),await super.send(e,t)}async _send(e){let t=Array.isArray(e)?e:[e],r=[];for(let o of t)try{let i=await this.hardhatProvider.send(o.method,o.params);r.push({id:o.id,result:i});}catch(i){r.push({id:o.id,error:{code:-32603,message:stringifyData(i)}});}return r}};var nt=5e3;var qo=["latest","earliest","pending","safe","finalized"],h=n=>{if(HexUInt.isValid(n))return Revision.of(HexUInt.of(n).n.toString());if(!qo.includes(n)){let e=n.toString();throw new JSONRPCInvalidDefaultBlock("DefaultBlockToRevision",`Invalid default block: ${e}`,e,null)}return n==="earliest"?Revision.of(HexUInt.of(0)):n==="safe"?Revision.of("justified"):n==="finalized"?Revision.of("finalized"):Revision.of("best")};var ke={MAINNET:"0x186a9",TESTNET:"0x186aa",SOLO_DEFAULT:"0xf6"},Be={MAINNET:"0x4a",TESTNET:"0x27",SOLO_DEFAULT:"0xf6"},ot=n=>n.isEqual(HexUInt.of(Be.MAINNET))?HexUInt.of(ke.MAINNET):n.isEqual(HexUInt.of(Be.TESTNET))?HexUInt.of(ke.TESTNET):n.isEqual(HexUInt.of(Be.SOLO_DEFAULT))?HexUInt.of(ke.SOLO_DEFAULT):n;var S=(n,e)=>{let t=typeof n.transactions[0]=="string"?n.transactions.findIndex(r=>r===e):n.transactions.findIndex(r=>r.hash===e);if(t===-1)throw new InvalidDataType("getTransactionIndexIntoBlock()","Transaction not found in block.",{block:n,hash:e});return t},it=(n,e,t)=>{let r=S(b.formatToRPCStandard(n,t),e),o=0;for(let i=0;i<r;i++){let a=n.transactions[i];for(let c of a.outputs)o+=c.events.length;}return o};var Kn=n=>n==null||typeof n!="number"?"0x0":n===fromTransactionType(TransactionType.EIP1559)?"0x2":"0x0",zn=(n,e,t,r,o)=>{let i="type"in n?n.type:0;return {blockHash:e,blockNumber:Quantity.of(t).toString(),from:n.origin,gas:Quantity.of(HexUInt.of(n.gas).bi).toString(),chainId:r,hash:n.id,nonce:n.nonce,transactionIndex:Quantity.of(o).toString(),input:n.clauses[0]?.data??"",to:n.clauses[0]?.to??null,value:n.clauses[0]?.value!==void 0?Quantity.of(HexUInt.of(n.clauses[0].value).bi).toString():"",type:Kn(i),maxFeePerGas:n.maxFeePerGas!==void 0&&n.maxFeePerGas!==null?Quantity.of(HexUInt.of(n.maxFeePerGas).bi).toString():void 0,maxPriorityFeePerGas:n.maxPriorityFeePerGas!==void 0&&n.maxPriorityFeePerGas!==null?Quantity.of(HexUInt.of(n.maxPriorityFeePerGas).bi).toString():void 0,gasPrice:"0x0",v:"0x0",r:"0x0",s:"0x0",accessList:[],yParity:"0x0"}},Yn=(n,e,t)=>zn(n,n.meta.blockID,n.meta.blockNumber,e,t),Qn=(n,e,t,r)=>zn(n,e.id,e.number,r,t);function Xn(n,e,t,r,o){let i=S(b.formatToRPCStandard(r,o),n),a=it(r,n,o),c=[],p=a;e.outputs.forEach(m=>{m.events.forEach(_=>{c.push({blockHash:e.meta.blockID,blockNumber:Quantity.of(e.meta.blockNumber).toString(),transactionHash:e.meta.txID,address:_.address,topics:_.topics.map(vr=>vr),data:_.data,removed:!1,transactionIndex:Quantity.of(i).toString(),logIndex:Quantity.of(p).toString()}),p++;});});let d="type"in t?t.type:0;return {blockHash:e.meta.blockID,blockNumber:Quantity.of(e.meta.blockNumber).toString(),contractAddress:e.outputs.length>0?e.outputs[0].contractAddress:null,from:t.origin,gasUsed:Quantity.of(e.gasUsed).toString(),logs:c,status:e.reverted?"0x0":"0x1",to:t.clauses[0].to,transactionHash:e.meta.txID,transactionIndex:Quantity.of(i).toString(),logsBloom:Hex.of(ZERO_BYTES(256)).toString(),cumulativeGasUsed:"0x0",effectiveGasPrice:"0x0",type:Kn(d)}}var F={formatToRPCStandard:Yn,formatExpandedBlockToRPCStandard:Qn,formatTransactionReceiptToRPCStandard:Xn};var Zn=(n,e)=>{let t=typeof n.transactions[0]=="string"?n.transactions:n.transactions.map((r,o)=>F.formatExpandedBlockToRPCStandard(r,n,o,e));return {hash:n.id,parentHash:n.parentID,number:Quantity.of(n.number).toString(),size:Quantity.of(n.size).toString(),stateRoot:n.stateRoot,receiptsRoot:n.receiptsRoot,transactionsRoot:n.txsRoot,timestamp:Quantity.of(n.timestamp).toString(),gasLimit:Quantity.of(n.gasLimit).toString(),gasUsed:Quantity.of(n.gasUsed).toString(),transactions:t,miner:n.beneficiary,baseFeePerGas:n.baseFeePerGas,difficulty:"0x0",totalDifficulty:"0x0",uncles:[],sha3Uncles:HexUInt.of(ZERO_BYTES(32)).toString(),nonce:HexUInt.of(ZERO_BYTES(8)).toString(),logsBloom:HexUInt.of(ZERO_BYTES(256)).toString(),extraData:"0x",...n.baseFeePerGas!==void 0?{baseFeePerGas:n.baseFeePerGas}:{},mixHash:HexUInt.of(ZERO_BYTES(32)).toString()}};var b={formatToRPCStandard:Zn};function at(n,e){return n==="call"?{...e,revertReason:""}:Object.fromEntries(Object.entries(e).map(([t,r])=>{let o={balance:r.balance,code:r.code,storage:r.storage};return [t,{...o,nonce:0}]}))}var de={formatToRPCStandard:at};var st=n=>n.map(e=>({address:e.address,blockHash:e.meta.blockID,blockNumber:HexInt.of(e.meta.blockNumber).toString(),data:e.data,logIndex:"0x0",removed:!1,topics:e.topics,transactionHash:e.meta.txID,transactionIndex:"0x0"})),Yo=(n,e)=>({address:e,topic0:n[0]??void 0,topic1:n[1]??void 0,topic2:n[2]??void 0,topic3:n[3]??void 0,topic4:n[4]??void 0}),ct=n=>{let e=[];return n.address!==void 0?e=typeof n.address=="string"?[n.address]:n.address:e=[void 0],e.map(r=>Qo(r,n.topics??[])).flat()},Qo=(n,e)=>{let t=[],r=[];e.forEach(i=>{Array.isArray(i)||t.push(i),Array.isArray(i)&&r.push(i);});let o=[];return t.length>0&&o.push(Yo(t,n)),r.forEach(i=>{i.forEach(a=>{o.push({address:n,topic0:a,topic1:void 0,topic2:void 0,topic3:void 0,topic4:void 0});});}),o.length===0&&o.push({address:n,topic0:void 0,topic1:void 0,topic2:void 0,topic3:void 0,topic4:void 0}),o};var J=null,_e=null,nr=null,f=async n=>{try{if(J!==null)return J.toString();let e=await n.blocks.getGenesisBlock();if(e?.id===null||e?.id===void 0)throw new JSONRPCInvalidParams("eth_chainId()","The genesis block id is null or undefined. Unable to get the chain id.",{url:n.httpClient.baseURL});if(!Hex.isValid(e.id))throw new JSONRPCInvalidParams("eth_chainId()","The genesis block id is invalid. Unable to get the chain id.",{url:n.httpClient.baseURL});return nr=Hex.of(e.id),_e=HexUInt.of(nr.bytes.slice(-1)),J=ot(_e),J.toString()}catch(e){throw new JSONRPCInternalError("eth_chainId()",'Method "eth_chainId" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}},lt=async n=>J!==null?J.toString():await f(n),ti=async n=>_e!==null?_e.toString():await f(n);var M=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getTransactionReceipt",`Invalid input params for "eth_getTransactionReceipt" method. See ${l} for details.`,{params:e});if(!ThorId.isValid(e[0]))throw new JSONRPCInvalidParams("eth_getTransactionReceipt","Invalid transaction ID given as input. Input must be an hex string of length 64.",{params:e});try{let[t]=e,r=await n.transactions.getTransactionReceipt(t);if(r!==null){let o=await n.blocks.getBlockExpanded(r.meta.blockID),i=await n.transactions.getTransaction(t),a=await f(n);return i!==null?F.formatTransactionReceiptToRPCStandard(t,r,i,o,a):null}else return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionReceipt()",'Method "eth_getTransactionReceipt" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var D=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceTransaction",`Invalid input params for "debug_traceTransaction" method. See ${l} for details.`,{params:e});let[t,r]=e;if(!ThorId.isValid(t))throw new InvalidDataType("debug_traceTransaction()","Invalid transaction ID given as input. Input must be an hex string of length 64.",{transactionId:t});let o=r.tracer==="callTracer"?"call":"prestate";try{let i=await M(n,[t]),a=await n.debug.traceTransactionClause({target:{blockId:ThorId.of(i?.blockHash),transaction:ThorId.of(i?.transactionHash),clauseIndex:0},config:{}},o);return de.formatToRPCStandard(o,a)}catch(i){throw new JSONRPCInternalError("debug_traceTransaction()",'Method "debug_traceTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(i)})}};var P=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||!ThorId.isValid(e[0])||typeof e[1]!="boolean")throw new JSONRPCInvalidParams("eth_getBlockByHash",`Invalid input params for "eth_getBlockByHash" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o="0x0";r&&(o=await f(n));let i=r?await n.blocks.getBlockExpanded(t):await n.blocks.getBlockCompressed(t);return i!==null?b.formatToRPCStandard(i,o):null}catch(t){throw new JSONRPCInternalError("eth_getBlockByHash()",'Method "eth_getBlockByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var dt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||!ThorId.isValid(e[0])||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceBlockByHash",'Invalid input params for "debug_traceBlockByHash" method. See https://www.quicknode.com/docs/ethereum/debug_traceBlockByHash for details.',{params:e});let[t,r]=e;try{let o=await P(n,[t,!1]);if(o===null)return [];let i=[];for(let a of o.transactions){let c=await D(n,[a,{...r,timeout:"5s"}]);i.push({txHash:a,result:c});}return i}catch(o){throw new JSONRPCInternalError("debug_traceBlockByHash()",'Method "debug_traceBlockByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var C=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="boolean")throw new JSONRPCInvalidParams("eth_getBlockByNumber",`Invalid input params for "eth_getBlockByNumber" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=h(t),i="0x0";r&&(i=await f(n));let a=r?await n.blocks.getBlockExpanded(o.toString()):await n.blocks.getBlockCompressed(o.toString());return a!==null?b.formatToRPCStandard(a,i):null}catch(t){throw new JSONRPCInternalError("eth_getBlockByNumber()",'Method "eth_getBlockByNumber" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var pt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object")throw new JSONRPCInvalidParams("debug_traceBlockByNumber",'Invalid input params for "debug_traceBlockByNumber" method. See https://www.quicknode.com/docs/ethereum/debug_traceBlockByNumber for details.',{params:e});let[t,r]=e;try{let o=await C(n,[t,!1]);if(o===null)return [];let i=[];for(let a of o.transactions){let c=await D(n,[a,{...r,timeout:"5s"}]);i.push({txHash:a,result:c});}return i}catch(o){throw new JSONRPCInternalError("debug_traceBlockByNumber()",'Method "debug_traceBlockByNumber" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var mt=async(n,e)=>{if(e.length!==3||typeof e[0]!="object"||typeof e[1]!="string"||typeof e[2]!="object")throw new JSONRPCInvalidParams("debug_traceCall",`Invalid input params for "debug_traceCall" method. See ${l} for details.`,{params:e});let t=e[0],r=e[2],o=r.tracer==="callTracer"?"call":"prestate";try{let i=await n.debug.traceContractCall({options:{caller:t.from,gas:t.gas!==void 0?parseInt(t.gas,16):void 0,gasPrice:t.gasPrice},target:{to:typeof t.to=="string"?Address.of(t.to):t.to,data:typeof t.data=="string"?HexUInt.of(t.data):void 0},config:r.tracerConfig},o);return de.formatToRPCStandard(o,i)}catch(i){throw new JSONRPCInternalError("debug_traceCall()",'Method "debug_traceCall" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(i)})}};var wi=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadBodiesByHashV1",messages:['Method "engine_getPayloadBodiesByHashV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var Ri=async()=>(VeChainSDKLogger("warning").log({title:"engine_getPayloadBodiesByRangeV1",messages:['Method "engine_getPayloadBodiesByRangeV1" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var pe=async n=>n?.wallet!==void 0?await n?.wallet.getAddresses():[];var ft=async n=>{try{let e=await n.blocks.getBestBlockCompressed();return e?.number!==void 0?`0x${e.number.toString(16)}`:"0x0"}catch(e){throw new JSONRPCInternalError("eth_blockNumber()",'Method "eth_blockNumber" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var yt=async(n,e)=>{if(e.length!==2||typeof e[0]!="object"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_call",`Invalid input params for "eth_call" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await n.transactions.simulateTransaction([{to:t.to??null,value:t.value??"0x0",data:t.data??"0x0"}],{revision:h(r).toString(),gas:t.gas!==void 0?parseInt(t.gas,16):void 0,gasPrice:t.gasPrice??t.gasPrice,caller:t.from});if(o[0].reverted)throw new JSONRPCInternalError("eth_call()",'Method "eth_call" failed when simulating the transaction.',{params:stringifyData(e),innerError:o[0].vmError});return o[0].data}catch(t){throw t instanceof JSONRPCInternalError?t:new JSONRPCInternalError("eth_call()",'Method "eth_call" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var bt=async(n,e)=>{if(e.length<1||e.length>2||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_estimateGas",`Invalid input params for "eth_estimateGas" method. See ${l} for details.`,{params:e});try{e.length===1&&e.push("latest");let[t,r]=e,o=h(r),i=await n.transactions.estimateGas([{to:t.to??null,value:t.value??"0x0",data:t.data??"0x"}],t.from,{revision:o.toString()});return HexUInt.of(i.totalGas).toString(!0)}catch(t){throw new JSONRPCInternalError("eth_estimateGas()",'Method "eth_estimateGas" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Tt=async(n,e,t)=>{if(!Array.isArray(e)||e.length<2)throw new JSONRPCInvalidParams("eth_feeHistory",'Invalid input params for "eth_feeHistory" method.',{params:e});if(!await n.forkDetector.detectGalactica())throw new JSONRPCMethodNotImplemented("eth_feeHistory",'Method "eth_feeHistory" is not available before Galactica hardfork.',{url:n.httpClient.baseURL});let o=e[0],i=e[1],a=e[2];if(typeof i!="string"&&typeof i!="number")throw new JSONRPCInvalidParams("eth_feeHistory","Invalid newestBlock parameter. Must be a string or number.",{newestBlock:i});let c=Number(o);if(!Number.isFinite(c)||c<=0)throw new JSONRPCInvalidParams("eth_feeHistory","blockCount must be a positive finite number.",{blockCount:o,blockCountNum:c});let p=h(i);try{return await n.gas.getFeeHistory({blockCount:c,newestBlock:p.toString(),rewardPercentiles:a})}catch(d){throw d instanceof JSONRPCInvalidParams?d:new JSONRPCInternalError("eth_feeHistory()",'Method "eth_feeHistory" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(d)})}};var Pt=async n=>{if(!await n.forkDetector.detectGalactica()){let{result:{plain:c}}=await n.contracts.getLegacyBaseGasPrice();return HexUInt.of(c).toString(!0)}let t=await n.blocks.getBestBlockCompressed(),r=t?.baseFeePerGas;if(r===void 0)throw new JSONRPCInternalError("eth_gasPrice","Last block should have baseFeePerGas defined.",{params:t,url:n.httpClient.baseURL});let o=await n.gas.getMaxPriorityFeePerGas(),i=HexUInt.of(r).bi,a=HexUInt.of(o).bi;return HexUInt.of(i+a).toString(!0)};var Ct=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getBalance",`Invalid input params for "eth_getBalance" method. See ${l} for details.`,{params:e});try{let[t,r]=e;return (await n.accounts.getAccount(Address.of(t),{revision:h(r)})).balance}catch(t){throw new JSONRPCInternalError("eth_getBalance()",'Method "eth_getBalance" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var wt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getBlockReceipts",`Invalid input params for "eth_getBlockReceipts" method. See ${l} for details.`,{params:e});try{let[t]=e,r=await C(n,[t,!0]);if(r===null)return null;let o=r.transactions,i=[];for(let a of o){let c=await M(n,[a.hash]);i.push(c);}return i}catch(t){throw new JSONRPCInternalError("eth_getBlockReceipts()",'Method "eth_getBlockReceipts" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var xt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string"||!ThorId.isValid(e[0]))throw new JSONRPCInvalidParams("eth_getBlockTransactionCountByHash",`Invalid input params for "eth_getBlockTransactionCountByHash" method. See ${l} for details.`,{params:e});let t=await P(n,[e[0],!1]);return t!==null?t.transactions.length:0};var Rt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getBlockTransactionCountByNumber",`Invalid input params for "eth_getBlockTransactionCountByNumber" method. See ${l} for details.`,{params:e});let t=await C(n,[e[0],!0]);return t!==null?t.transactions.length:0};var vt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getCode",`Invalid input params for "eth_getCode" method. See ${l} for details.`,{params:e});try{let[t,r]=e;return (await n.accounts.getBytecode(Address.of(t),{revision:h(r)})).toString()}catch(t){throw new JSONRPCInternalError("eth_getCode()",'Method "eth_getCode" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Wi=async()=>(VeChainSDKLogger("warning").log({title:"eth_getFilterChanges",messages:['Method "eth_getFilterChanges" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var zi=async()=>(VeChainSDKLogger("warning").log({title:"eth_getFilterLogs",messages:['Method "eth_getFilterLogs" has not been implemented yet.']}),await Promise.resolve("METHOD NOT IMPLEMENTED"));var me=async(n,e)=>{if(e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_getLogs",`Invalid input params for "eth_getLogs" method. See ${l} for details.`,{params:e});let t=1e3,[r]=e;try{let o=await n.blocks.getBestBlockCompressed(),i=ct({address:r.address!==null?r.address:void 0,topics:r.topics}),a=await n.logs.filterRawEventLogs({range:{unit:"block",from:r.fromBlock!==void 0?parseInt(r.fromBlock,16):o.number,to:r.toBlock!==void 0?parseInt(r.toBlock,16):o.number},criteriaSet:i,order:"asc",options:{offset:0,limit:t}});return st(a)}catch(o){throw new JSONRPCInternalError("eth_getLogs()",'Method "eth_getLogs" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(o)})}};var kt=async(n,e)=>{if(e.length!==3||typeof e[0]!="string"||typeof e[1]!="string"&&typeof e[1]!="bigint"||e[2]!=null&&typeof e[2]!="object"&&typeof e[2]!="string")throw new JSONRPCInvalidParams("eth_getStorageAt",`Invalid input params for "eth_getStorageAt" method. See ${l} for details.`,{params:e});try{e[2]==null&&(e[2]="latest");let[t,r,o]=e;return (await n.accounts.getStorageAt(Address.of(t),ThorId.of(r),{revision:h(o)})).toString()}catch(t){throw new JSONRPCInternalError("eth_getStorageAt()",'Method "eth_getStorageAt" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var U=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByHash",`Invalid input params for "eth_getTransactionByHash" method. See ${l} for details.`,{params:e});try{let[t]=e,r=await n.transactions.getTransaction(t);if(r===null)return null;let o=await P(n,[r.meta.blockID,!1]);if(o===null)return null;let i=S(o,t),a=await f(n);return F.formatToRPCStandard(r,a,i)}catch(t){throw new JSONRPCInternalError("eth_getTransactionByHash()",'Method "eth_getTransactionByHash" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var Bt=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByBlockHashAndIndex",`Invalid input params for "eth_getTransactionByBlockHashAndIndex" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await P(n,[t,!1]);for(let i of o.transactions){let a=await U(n,[i]);if(a.transactionIndex===r)return a}return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionByBlockHashAndIndex()",'Method "eth_getTransactionByBlockHashAndIndex" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var It=async(n,e)=>{if(e.length!==2||typeof e[0]!="string"||typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionByBlockNumberAndIndex",`Invalid input params for "eth_getTransactionByBlockNumberAndIndex" method. See ${l} for details.`,{params:e});try{let[t,r]=e,o=await C(n,[t,!1]);for(let i of o.transactions){let a=await U(n,[i]);if(a.transactionIndex===r)return a}return null}catch(t){throw new JSONRPCInternalError("eth_getTransactionByBlockNumberAndIndex()",'Method "eth_getTransactionByBlockNumberAndIndex" failed.',{params:stringifyData(e),url:n.httpClient.baseURL,innerError:stringifyData(t)})}};var At=async n=>{if(typeof n[0]!="string"||typeof n[1]!="object"&&typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getTransactionCount",`Invalid input params for "eth_getTransactionCount" method. See ${l} for details.`,{params:n});if(!Address.isValid(n[0]))throw new JSONRPCInvalidParams("eth_getTransactionCount","Invalid address, expected a 20 bytes address string.",{params:n});return await Promise.resolve(Hex.of(Secp256k1.randomBytes(6)).toString())};var St=async n=>{if(n.length!==2||typeof n[0]!="string"||!ThorId.isValid(n[0])||typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getUncleByBlockHashAndIndex",'Invalid input params for "eth_getUncleByBlockHashAndIndex" method. See https://docs.infura.io/api/networks/ethereum/json-rpc-methods/eth_getunclebyblockhashandindex for details.',{params:n});return await Promise.resolve(null)};var _t=async n=>{if(n.length!==2||typeof n[0]!="string"||typeof n[1]!="string")throw new JSONRPCInvalidParams("eth_getUncleByBlockNumberAndIndex",'Invalid input params for "eth_getUncleByBlockNumberAndIndex" method. See https://docs.infura.io/api/networks/ethereum/json-rpc-methods/eth_getunclebyblocknumberandindex for details.',{params:n});return await Promise.resolve(null)};var Et=async n=>{if(n.length!==1||typeof n[0]!="string"||!ThorId.isValid(n[0]))throw new JSONRPCInvalidParams("eth_getUncleCountByBlockHash",`Invalid input params for "eth_getUncleCountByBlockHash" method. See ${l} for details.`,{params:n});return await Promise.resolve(0)};var Nt=async n=>{if(n.length!==1||typeof n[0]!="string")throw new JSONRPCInvalidParams("eth_getUncleCountByBlockNumber",`Invalid input params for "eth_getUncleCountByBlockNumber" method. See ${l} for details.`,{params:n});return await Promise.resolve(0)};var Ot=async(n,e,t)=>{try{if(!await n.forkDetector.detectGalactica())throw new JSONRPCMethodNotImplemented("eth_maxPriorityFeePerGas",'Method "eth_maxPriorityFeePerGas" is not available before Galactica hardfork.',{url:n.httpClient.baseURL});return await n.gas.getMaxPriorityFeePerGas()}catch(r){throw r instanceof JSONRPCInternalError||r instanceof JSONRPCMethodNotImplemented?r:new JSONRPCInternalError("eth_maxPriorityFeePerGas()",'Method "eth_maxPriorityFeePerGas" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(r)})}};var Ft=async n=>{let e=await pe(n);if(e.length===0)throw new JSONRPCInvalidParams("eth_requestAccounts()",'Method "eth_requestAccounts" failed.',{provider:stringifyData(n)});return e};var Mt=async(n,e)=>{if(e.length!==1||typeof e[0]!="string")throw new JSONRPCInvalidParams("eth_sendRawTransaction()",`Invalid input params for "eth_sendRawTransaction" method. See ${l} for details.`,{params:e});if(!Hex.isValid0x(e[0]))throw new JSONRPCInvalidParams("eth_sendRawTransaction()","Invalid transaction encoded data given as input. Input must be a hex string.",{params:e});try{let[t]=e;return (await n.transactions.sendRawTransaction(t)).id}catch(t){throw new JSONRPCInternalError("eth_sendRawTransaction()",'Method "eth_sendRawTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},t)}};var Dt=async(n,e,t)=>{if(e===void 0||e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_sendTransaction",`Invalid input params for "eth_sendTransaction" method. See ${l} for details.`,{params:e});if(t?.wallet===void 0)throw new JSONRPCInvalidParams("eth_sendTransaction","Provider must be defined with a wallet. Ensure that the provider is defined and connected to the network.",{provider:t});if(e[0].from===void 0)throw new JSONRPCInvalidParams("eth_sendTransaction","From field is required in the transaction object.",{provider:t});e[0].value===void 0&&(e[0].value="0x0");let[r]=e,o=await lt(n);if(r.chainId!=null&&r.chainId!==o)throw new JSONRPCInvalidParams("eth_sendTransaction",`ChainId in the transaction object does not match the chainId of the network. Expected: ${o}, Received: ${r.chainId}`,{chainId:r.chainId});try{return await(await t.getSigner(r.from)).sendTransaction(r)}catch(i){throw new JSONRPCInternalError("eth_sendTransaction()",'Method "eth_sendTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},i)}};var Gt=async(n,e,t)=>{if(e.length!==1||typeof e[0]!="object")throw new JSONRPCInvalidParams("eth_signTransaction",`Invalid input params for "eth_signTransaction" method. See ${l} for details.`,{params:e});if(t?.wallet===void 0)throw new JSONRPCInvalidParams("eth_signTransaction","Provider must be defined with a wallet. Ensure that the provider is defined and connected to the network.",{provider:t});if(e[0].from===void 0)throw new JSONRPCInvalidParams("eth_signTransaction","From field is required in the transaction object.",{provider:t});let[r]=e;try{return await(await t.getSigner(r.from)).signTransaction(r)}catch(o){throw new JSONRPCInternalError("eth_signTransaction()",'Method "eth_signTransaction" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},o)}};var Vt=async(n,e,t)=>{if(e.length!==2||typeof e[0]!="string"||!Address.isValid(e[0])||typeof e[1]!="object"&&typeof e[1]!="string")throw new JSONRPCInvalidParams("eth_signTypedDataV4",'Invalid input params for "eth_signTypedDataV4" method. See https://docs.metamask.io/wallet/reference/eth_signtypeddata_v4/ for details.',{params:e});if(t?.wallet===void 0||await t.getSigner(e[0])===null)throw new JSONRPCInvalidParams("eth_signTypedDataV4",`Provider must be defined with a wallet. Ensure that the provider is defined, connected to the network and has the wallet with the address ${e[0]} into it.`,{provider:t});let[r]=e,o;if(typeof e[1]=="string")try{o=JSON.parse(e[1]);}catch(i){throw new JSONRPCInvalidParams("eth_signTypedData_v4","Invalid JSON string for typed data parameter",{params:e},i)}else o=e[1];try{return await(await t.getSigner(r)).signTypedData(o.domain,o.types,o.message,o.primaryType)}catch(i){throw new JSONRPCInternalError("eth_signTypedDataV4",'Method "eth_signTypedDataV4" failed.',{params:stringifyData(e),url:n.httpClient.baseURL},i)}};var qt=async(n,e,t)=>{if(t===void 0)throw new JSONRPCInternalError("eth_subscribe()",'Method "eth_subscribe" failed. Provider is not defined.',{url:n.httpClient.baseURL,params:stringifyData(e)});if(e[0]!=="newHeads"&&e[0]!=="logs")throw new JSONRPCInvalidParams("eth_subscribe()",'Method "eth_subscribe" failed. Invalid subscription type param.',{url:n.httpClient.baseURL,params:stringifyData(e)});if(t.getPollInstance()===void 0){let o=await n.blocks.getBestBlockCompressed();if(o!=null)t.subscriptionManager.currentBlockNumber=o.number;else throw new JSONRPCServerError("eth_subscribe()",'Method "eth_subscribe" failed. Best block not available.',{url:n.httpClient.baseURL,params:stringifyData(e)});t.startSubscriptionsPolling();}let r=Hex.random(16).digits;return e.includes("newHeads")&&(t.subscriptionManager.newHeadsSubscription={subscriptionId:r,subscription:{type:"newHeads"}}),e.includes("logs")&&t.subscriptionManager.logSubscriptions.set(r,{type:"logs",options:e[1]}),r};var Da=n=>Math.floor(Date.now()/1e3)-n.timestamp<11e3,Jt=async n=>{try{let e=await n.blocks.getBestBlockCompressed(),t=await n.blocks.getGenesisBlock(),r=t!==null?HexInt.of(Math.floor((Date.now()-t.timestamp)/1e4)).toString():null;if(e!==null){if(Da(e))return !1;let o=await f(n);return {currentBlock:b.formatToRPCStandard(e,o),highestBlock:r,startingBlock:null}}return {currentBlock:null,highestBlock:r,startingBlock:null}}catch(e){throw new JSONRPCInternalError("eth_syncing()",'Method "eth_syncing" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var $t=async(n,e)=>{let t=!1;if(e===void 0)throw new JSONRPCInternalError("eth_unsubscribe()",'Method "eth_unsubscribe" failed. Provider is not defined.',{params:stringifyData(n)});let r=n[0];return e.subscriptionManager.newHeadsSubscription!==void 0&&r===e.subscriptionManager.newHeadsSubscription.subscriptionId?(e.subscriptionManager.newHeadsSubscription=void 0,t=!0):t=e.subscriptionManager.logSubscriptions.delete(r),e.isThereActiveSubscriptions()||e.stopSubscriptionsPolling(),await Promise.resolve(t)};var Fe=async n=>{try{let e=await n.blocks.getBestBlockCompressed();if(e===null)throw new JSONRPCInternalError("evm_mine()",'Method "evm_mine" failed. No best block found.',{url:n.httpClient.baseURL});return await x.SyncPoll(()=>n.blocks.getHeadBlock()).waitUntil(t=>t!==e),null}catch(e){throw e instanceof JSONRPCInternalError?e:new JSONRPCInternalError("evm_mine()",'Method "evm_mine" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var Wt=async n=>{try{return await n.nodes.isHealthy()}catch(e){throw new JSONRPCInternalError("net_listening()",'Method "net_listening" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var Kt=async n=>{try{return (await n.nodes.getNodes()).length}catch(e){throw new JSONRPCInternalError("net_peerCount()",'Method "net_peerCount" failed.',{url:n.httpClient.baseURL,innerError:stringifyData(e)})}};var zt=async n=>await f(n);var Yt=async()=>await Promise.resolve({});var Qt=async n=>{if(n.length!==1||typeof n[0]!="string"||!Address.isValid(n[0]))throw new JSONRPCInvalidParams("txpool_contentFrom()",'Invalid input params for "txpool_contentFrom" method. See https://www.quicknode.com/docs/ethereum/txpool_contentFrom for details.',{params:n});return await Promise.resolve({})};var Xt=async()=>await Promise.resolve({});var Zt=async()=>await Promise.resolve({});var en=async()=>await Promise.resolve("thor");var tn=async n=>{if(n.length!==1||typeof n[0]!="string"||!Hex.isValid(n[0]))throw new JSONRPCInvalidParams("web3_sha3",`Invalid input params for "web3_sha3" method. See 'https://docs.alchemy.com/reference/web3-sha3' for details.`,{params:n});return await Promise.resolve(Keccak256.of(n[0]).toString())};var nn=(n,e)=>({eth_blockNumber:async()=>await ft(n),eth_chainId:async()=>await f(n),eth_getBalance:async t=>await Ct(n,t),eth_getCode:async t=>await vt(n,t),eth_getStorageAt:async t=>await kt(n,t),eth_estimateGas:async t=>await bt(n,t),eth_call:async t=>await yt(n,t),eth_sendRawTransaction:async t=>await Mt(n,t),eth_getLogs:async t=>await me(n,t),eth_getBlockByHash:async t=>await P(n,t),eth_getBlockByNumber:async t=>await C(n,t),eth_accounts:async()=>await pe(e),eth_gasPrice:async()=>await Pt(n),eth_getTransactionByHash:async t=>await U(n,t),eth_getTransactionCount:async t=>await At(t),eth_getTransactionReceipt:async t=>await M(n,t),eth_sendTransaction:async t=>await Dt(n,t,e),eth_syncing:async()=>await Jt(n),net_version:async()=>await zt(n),web3_clientVersion:async()=>await en(),eth_subscribe:async t=>await qt(n,t,e),eth_unsubscribe:async t=>await $t(t,e),debug_traceTransaction:async t=>await D(n,t),debug_traceCall:async t=>await mt(n,t),evm_increaseTime:async()=>await Fe(n),evm_mine:async()=>await Fe(n),eth_getBlockTransactionCountByHash:async t=>await xt(n,t),eth_getBlockTransactionCountByNumber:async t=>await Rt(n,t),eth_getTransactionByBlockHashAndIndex:async t=>await Bt(n,t),eth_getTransactionByBlockNumberAndIndex:async t=>await It(n,t),eth_getUncleByBlockHashAndIndex:async t=>await St(t),eth_getUncleByBlockNumberAndIndex:async t=>await _t(t),eth_getUncleCountByBlockHash:async t=>await Et(t),eth_getUncleCountByBlockNumber:async t=>await Nt(t),eth_requestAccounts:async()=>await Ft(e),net_listening:async()=>await Wt(n),net_peerCount:async()=>await Kt(n),eth_getBlockReceipts:async t=>await wt(n,t),eth_signTransaction:async t=>await Gt(n,t,e),web3_sha3:async t=>await tn(t),txpool_inspect:async()=>await Xt(),txpool_content:async()=>await Yt(),txpool_contentFrom:async t=>await Qt(t),txpool_status:async()=>await Zt(),debug_traceBlockByHash:async t=>await dt(n,t),debug_traceBlockByNumber:async t=>await pt(n,t),eth_signTypedData_v4:async t=>await Vt(n,t,e),eth_maxPriorityFeePerGas:async t=>await Ot(n),eth_feeHistory:async t=>await Tt(n,t)});var $=class extends EventEmitter{constructor(t,r,o=!1){super();this.thorClient=t;this.wallet=r;this.enableDelegation=o;}subscriptionManager={logSubscriptions:new Map,currentBlockNumber:0};pollInstance;destroy(){this.thorClient.destroy(),this.pollInstance!==void 0&&(this.pollInstance.stopListen(),this.pollInstance=void 0);}async request(t){if(!Object.values(N).map(o=>o.toString()).includes(t.method))throw new JSONRPCMethodNotFound("VeChainProvider.request()","Method not found",{code:-32601,message:"Method not found"});let r=nn(this.thorClient,this);if(!(t.method in r))throw new JSONRPCMethodNotImplemented(t.method,"Method not implemented",{code:-32004,message:"Method not supported"});return await r[t.method](t.params)}startSubscriptionsPolling(){let t=!1;return this.pollInstance===void 0&&(this.pollInstance=x.createEventPoll(async()=>{let r=[],o=await this.getCurrentBlock();if(o!==null){if(this.subscriptionManager.newHeadsSubscription!==void 0&&r.push({method:"eth_subscription",params:{subscription:this.subscriptionManager.newHeadsSubscription.subscriptionId,result:o}}),this.subscriptionManager.logSubscriptions.size>0){let i=await this.getLogsRPC();r.push(...i);}this.subscriptionManager.currentBlockNumber++;}return r},5e3).onData(r=>{r.forEach(o=>{this.emit("message",o);});}),this.pollInstance.startListen(),t=!0),t}stopSubscriptionsPolling(){let t=!1;return this.pollInstance!==void 0&&(this.pollInstance.stopListen(),this.pollInstance=void 0,t=!0),t}isThereActiveSubscriptions(){return this.subscriptionManager.logSubscriptions.size>0||this.subscriptionManager.newHeadsSubscription!==void 0}getPollInstance(){return this.pollInstance}async getLogsRPC(){let t=Array.from(this.subscriptionManager.logSubscriptions.entries()).map(async([o,i])=>{let a=HexInt.of(this.subscriptionManager.currentBlockNumber).toString(),c={address:i.options?.address,fromBlock:a,toBlock:a,topics:i.options?.topics};return {method:"eth_subscription",params:{subscription:o,result:await me(this.thorClient,[c])}}});return (await Promise.all(t)).filter(o=>o.params.result.length>0)}async getCurrentBlock(){let t=null;if(this.isThereActiveSubscriptions()){let r=await this.thorClient.blocks.getBlockCompressed(this.subscriptionManager.currentBlockNumber);r!=null&&(t=r);}return t}async getSigner(t){return this.wallet===void 0?null:await this.wallet?.getSigner(this,t)}async resolveName(t){return await R.resolveName(this.thorClient,t)}async lookupAddress(t){return await R.lookupAddress(this.thorClient,t)}};var on=class extends ${debug;buildHardhatErrorFunctionCallback;rpcConfiguration;constructor(e,t,r,o=!1,i=!1,a={ethGetTransactionCountMustReturn0:!1}){super(new oe(new E(t)),e,i),this.debug=o,this.rpcConfiguration=a,this.buildHardhatErrorFunctionCallback=r;}async send(e,t){return await this.request({method:e,params:t})}async sendAsync(e,t){try{let r=await this.request({method:e.method,params:e.params});t(null,{id:e.id,jsonrpc:"2.0",result:r});}catch(r){t(r,{id:e.id,jsonrpc:"2.0"});}}async request(e){let t=this.rpcConfiguration.ethGetTransactionCountMustReturn0&&e.method==="eth_getTransactionCount";try{if(this.debug){let o=await this.wallet.getAddresses(),i=await this.wallet.getGasPayer();VeChainSDKLogger("log").log({title:`Sending request - ${e.method}`,messages:[`params: ${stringifyData(e.params)}`,`accounts: ${stringifyData(o)}`,`gasPayer: ${stringifyData(i)}`,`url: ${this.thorClient.httpClient.baseURL}`]});}let r=t?"0x0":await super.request({method:e.method,params:e.params});return this.debug&&VeChainSDKLogger("log").log({title:`Get request - ${e.method} result`,messages:[`result: ${stringifyData(r)}`]}),r}catch(r){if(this.debug&&VeChainSDKLogger("error").log(new JSONRPCInternalError(e.method,`Error on request - ${e.method}`,{args:e})),r instanceof VechainSDKError)throw e.method==="eth_call"?this.buildHardhatErrorFunctionCallback("revert",r):this.buildHardhatErrorFunctionCallback(`Error on request ${e.method}: ${r.innerError}`,r)}}};

export { j as AccountDetail, K as AccountsModule, fe as BUILT_IN_CONTRACTS, z as BlocksModule, ke as CHAIN_ID, Be as CHAIN_TAG, B as Contract, G as ContractFactory, X as ContractsModule, Z as DebugModule, h as DefaultBlockToRevision, V as DelegationHandler, he as ERROR_SELECTOR, H as ForkDetector, ee as GasModule, Ue as HTTPS_REGEX, ge as HTTP_REGEX, on as HardhatVeChainProvider, w as HttpMethod, tt as JSONRPCEthersProvider, te as LogsModule, Mr as MAINNET_URL, Ge as NODE_HEALTHCHECK_TOLERANCE_IN_SECONDS, ne as NodesModule, ye as PANIC_SELECTOR, nt as POLLING_INTERVAL, x as Poll, ce as ProviderInternalBaseWallet, et as ProviderInternalHDWallet, nn as RPCMethodsMap, l as RPC_DOCUMENTATION_URL, N as RPC_METHODS, E as SimpleHttpClient, Dr as TESTNET_URL, Ur as THOR_SOLO_URL, oe as ThorClient, re as TransactionsModule, ae as VeChainAbstractSigner, se as VeChainPrivateKeySigner, $ as VeChainProvider, b as blocksFormatter, y as buildQuery, ot as chainTagToChainId, de as debugFormatter, dt as debugTraceBlockByHash, pt as debugTraceBlockByNumber, mt as debugTraceCall, D as debugTraceTransaction, wi as engineGetPayloadBodiesByHashV1, Ri as engineGetPayloadBodiesByRangeV1, pe as ethAccounts, ft as ethBlockNumber, yt as ethCall, f as ethChainId, bt as ethEstimateGas, Tt as ethFeeHistory, Pt as ethGasPrice, Ct as ethGetBalance, P as ethGetBlockByHash, C as ethGetBlockByNumber, wt as ethGetBlockReceipts, xt as ethGetBlockTransactionCountByHash, Rt as ethGetBlockTransactionCountByNumber, vt as ethGetCode, Wi as ethGetFilterChanges, zi as ethGetFilterLogs, me as ethGetLogs, kt as ethGetStorageAt, Bt as ethGetTransactionByBlockHashAndIndex, It as ethGetTransactionByBlockNumberAndIndex, U as ethGetTransactionByHash, At as ethGetTransactionCount, M as ethGetTransactionReceipt, St as ethGetUncleByBlockHashAndIndex, _t as ethGetUncleByBlockNumberAndIndex, Et as ethGetUncleCountByBlockHash, Nt as ethGetUncleCountByBlockNumber, Ot as ethMaxPriorityFeePerGas, Ft as ethRequestAccounts, Mt as ethSendRawTransaction, Dt as ethSendTransaction, Gt as ethSignTransaction, Vt as ethSignTypedDataV4, qt as ethSubscribe, Jt as ethSyncing, $t as ethUnsubscribe, Fe as evmMine, st as formatToLogsRPC, at as formatToRPCStandard, lt as getCachedChainId, ti as getCachedChainTag, ct as getCriteriaSetForInput, it as getNumberOfLogsAheadOfTransactionIntoBlockExpanded, S as getTransactionIndexIntoBlock, Wt as netListening, Kt as netPeerCount, zt as netVersion, Rr as network, k as sanitizeWebsocketBaseURL, De as signerUtils, $r as subscriptions, u as thorest, v as toQueryString, F as transactionsFormatter, Yt as txPoolContent, Qt as txPoolContentFrom, Xt as txPoolInspect, Zt as txPoolStatus, R as vnsUtils, en as web3ClientVersion, tn as web3Sha3 };
//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map